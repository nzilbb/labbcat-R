[{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"set-up-initial-environment","dir":"Articles > Examples","previous_headings":"","what":"Set Up Initial Environment","title":"Forced Alignment Comparison","text":"Almost operations needed forced alignment comparison can implemented directly code. However, annotator modules used must already installed LaBB-CAT. case, local LaBB-CAT instance already following annotator modules installed: CMU Dictionary Manager, provides ARPAbet-encoded pronunciations words HTK Layer Manager, perform forced alignment using dictionary ‘P2FA’ pre-trained models. MFA Manager, integrates Montreal Forced Aligner BAS Web Services Annotator, provides access ‘WebMAUS’ web service forced alignment. Defining location LaBB-CAT server, transcript/media files also required:","code":"library(nzilbb.labbcat) dataDir <- \"data\" transcriptFiles = dir(path = dataDir, pattern = \".*\\\\.TextGrid$\", full.names = FALSE) url <- Sys.getenv('TEST_ADMIN_LABBCAT_URL') # load details from .Renviron file credentialError <- labbcatCredentials(   url, Sys.getenv('TEST_ADMIN_LABBCAT_USERNAME'), Sys.getenv('TEST_ADMIN_LABBCAT_PASSWORD'))"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"cleaning-up-any-previous-setup","dir":"Articles > Examples","previous_headings":"","what":"Cleaning up any previous setup","title":"Forced Alignment Comparison","text":"process designed re-runnable, don’t assume LaBB-CAT instance completely empty. following code removes previously-created configuration data.","code":"# delete layers deleteLayer(url, \"cmuDictPhonemes\") deleteLayer(url, \"p2fa\") deleteLayer(url, \"p2faPhone\") deleteLayer(url, \"p2faComp\") deleteLayer(url, \"mfaGAm\") deleteLayer(url, \"mfaGAmPhone\") deleteLayer(url, \"mfaGAmComp\") deleteLayer(url, \"mfaUKE\") deleteLayer(url, \"mfaUKEPhone\") deleteLayer(url, \"mfaUKEComp\") deleteLayer(url, \"maus\") deleteLayer(url, \"mausPhone\") deleteLayer(url, \"mausComp\")  # delete any pre-existing transcripts for (transcriptName in transcriptFiles) {   # if the transcript is in LaBB-CAT...   if (length(getMatchingTranscriptIds(url, paste(\"id = '\", transcriptName, \"'\", sep=\"\"))) > 0) {     # ...delete it      deleteTranscript(url, transcriptName)   } } # next textGrid"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"forced-alignment","dir":"Articles > Examples","previous_headings":"","what":"Forced alignment","title":"Forced Alignment Comparison","text":"several configurations forced alignment compared , including different forced aligners, different configurations forced aligner. can compared manual alignments mapping manually aligned words automatically aligned words, within word token, mapping manually aligned phones automatically aligned phones. performed using Layer Mapper module, configured map compare forced alignment configurations.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"htk","dir":"Articles > Examples","previous_headings":"Forced alignment","what":"HTK","title":"Forced Alignment Comparison","text":"Hidden Markov Model Toolkit (HTK) speech recognition toolkit developed Cambridge University. Integration LaBB-CAT involves specifying layer orthographic transcription comes , another provides phonemic transcriptions word token, adding setting layers receiving word phoneme alignments.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"cmu-pronouncing-dictionary","dir":"Articles > Examples","previous_headings":"Forced alignment > HTK","what":"CMU Pronouncing Dictionary","title":"Forced Alignment Comparison","text":"use CMU Pronouncing Dictionary, provide word pronunciations corpus, using LaBB-CAT module integrates CMU Pronouncing dictionary: annotator tags words pronunciations according   CMU Pronouncing dictionary,   machine-readable pronunciation dictionary North American English contains   125,000 words transcriptions. Configuration parameters encoded URL query string, e.g. tokenLayerId=orthography&pronunciationLayerId=phonemes&encoding=DISC Parameters : tokenLayerId Input layer words come. transcriptLanguageLayerId Transcript attribute overall language,     annotator can avoid tagging non-English transcripts. phraseLanguageLayerId Layer annotating phrases different     language, annotator can avoid tagging non-English phrases. pronunciationLayerId Output layer pronunciations added. encoding \"CMU\" - CMU ARPAbet encoding, e.g. \"T R AE2 N S K R IH1 P SH AH0 N\" \"DISC\" - CELEX DISC encoding, e.g. \"tr{nskrIpS@n\" firstVariantOnly multiple entries token, use     first one. Value \"\" true, parameter     absent indicate false. cmuDictPhonemes layer configured follows:","code":"cmuDictPhonemes = newLayer(   url, \"cmuDictPhonemes\",    description = \"Phonemic transcriptions according to the CMU Pronouncing Dictionary\",   alignment = 0, parent.id = \"word\",    annotator.id = \"CMUdict\",    annotator.task.parameters = paste(     \"tokenLayerId=orthography\",   # get word tokens from orthography layer     \"pronunciationLayerId=cmuDictPhonemes\",     \"encoding=CMU\",               # Use original ARPAbet encoding, not CELEX DISC encoding     \"transcriptLanguageLayerId=\", # not filtering tagging by language...     \"phraseLanguageLayerId=\",     sep = \"&\"))"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"p2fa-forced-alignment","dir":"Articles > Examples","previous_headings":"Forced alignment > HTK","what":"P2FA forced alignment","title":"Forced Alignment Comparison","text":"LaBB-CAT module integrates HTK can configured various ways, example train acoustic models scratch corpus data , use pre-trained models another corpus. module includes pre-trained acoustic models University Pennsylvania Phonetics Lab Forced Aligner (P2FA). P2FA models trained 25.5 hours speech adult American English speakers, specifically speech eight Supreme Court Justices selected oral arguments Supreme Court United States (SCOTUS) corpus. LaBB-CAT module integrates HTK called HTKAligner: HTK Aligner can use words phonemic transcriptions,   corresponding audio, force-align words phones; .e. determine start   end time speech sound within word, thus start/end times   words. Configuration parameters encoded URL query string, e.g. orthographyLayerId=orthography&pauseMarkers=-&pronunciationLayerId=cmudict&noiseLayerId=noise&mainUtteranceGrouping=Speaker&otherUtteranceGrouping=Aligned&noisePatterns=laugh.* unclear .*noise.*&overlapThreshold=5&wordAlignmentLayerId=word&phoneAlignmentLayerId=segmentutteranceTagLayerId=htk&cleanupOption=100   NB Ensure configuration string provided parts correctly   URI-encoded; particular, space delimiter noisePatterns   encoded %20 + Parameters : orthographyLayerId Input layer words come. pauseMarkers Characters mark pauses speech     transcript, separated spaces. pronunciationLayerId Input layer word pronunciations come. mainUtteranceGrouping \"Speaker\" - group main-participant utterances speaker         together, across transcripts. \"Transcript\" - group main-participant utterances speaker         together, within transcript. otherUtteranceGrouping \"Aligned\" - include non-main participant speech. \"Transcript\" - group non-main-participant utterances         speaker together, within transcript. pauseMarkers Characters mark pauses speech     transcript, separated spaces, e.g. - . noiseLayerId Layer noise annotations. noisePatterns Space-delimited list regular expressions     matching noise layer, HTK model . e.g.     \"laugh.* unclear .*noise.*\" train three non-speech models noise     annotations whose label starts word \"laugh\", label \"unclear\",     label includes word \"noise\". overlapThreshold Percentage overlap speech,     utterance ignored. 0 blank means utterances ignored,     matter much overlap speech. useP2FA Whether use pre-trained P2FA models . sampleRate (optional) \"11025\" downsample audio 11,025Hz     alignment. leftPattern Regular expression matching ID     participant left audio channel. rightPattern Regular expression matching ID     participant right audio channel. ignoreAlignmentStatuses Set non-empty value parameter     overwrite manual alignments, otherwise omit parameter. wordAlignmentLayerId Output layer word alignments     saved. can word update main word token alignments,     phrase layer save alignments separately main word token alignments.     specified layer exist, phrase layer created. phoneAlignmentLayerId Output layer phone alignments     saved. can segment update main phone segment alignments,     phrase layer save alignments separately main phone segment alignments.     specified layer exist, phrase layer created. utteranceTagLayerId Optional output layer time stamp tagging     aligned utterance. specified layer exist, phrase layer     created. scoreLayerId Output layer phone acoustic scores saved. cleanupOption 75 - Working files deleted alignment succeeds. 25 - Working files deleted alignment fails. 100 - Working files deleted whether alignment succeeds . 0 - Working files deleted whether alignment         succeeds . configuration using P2FA pre-trained models :","code":"p2fa <- newLayer(   url, \"p2fa\",    description = \"Word alignments from HTK using the P2FA pretrained acoustic models.\",   alignment = 2, parent.id = \"turn\", # a phrase layer   annotator.id = \"HTK\",    annotator.task.parameters = paste(     \"orthographyLayerId=orthography\",     \"pronunciationLayerId=cmuDictPhonemes\", # pronunciations come from the CMU Dict layer     \"useP2FA=on\",                           # use pre-trained P2FA models     \"overlapThreshold=5\",                   # ignore utterances that overlap more than 5%     \"wordAlignmentLayerId=p2fa\",     # save word alignments to this layer     \"phoneAlignmentLayerId=p2faPhone\", # this layer will be created by the annotator     \"cleanupOption=100\", sep=\"&\"))"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"montreal-forced-aligner","dir":"Articles > Examples","previous_headings":"Forced alignment","what":"Montreal Forced Aligner","title":"Forced Alignment Comparison","text":"Montreal Forced Aligner (MFA), another forced alignment system uses Kaldi ASR toolkit instead HTK. LaBB-CAT module integrates Montreal Forced Aligner called MFA: MFA Annotator integrates        Montreal Forced Aligner, can use words phonemic transcriptions,   corresponding audio, force-align words phones; .e. determine start   end time speech sound within word, thus start/end times   words. Configuration parameters encoded URL query string, e.g. orthographyLayerId=orthography&dictionaryName=english&modelsName=english&wordAlignmentLayerId=word&phoneAlignmentLayerId=segment&utteranceTagLayerId=mfa Parameters : orthographyLayerId Input layer words come. pronunciationLayerId Input layer word pronunciations     come. select layer, must specify value dictionaryName. overlapThreshold Percentage overlap speech,     utterance ignored. 0 means utterances ignored, matter much     overlap speech. specified, default 5%. multilingualIPA Set non-empty value parameter use     --multilingual_ipa switch, omit parameter otherwise dictionaryName wish use one available language     dictionaries instead specifying Pronunciation Layer, specify name     parameter. Available dictionaries listed     https://github.com/MontrealCorpusTools/mfa-models/tree/main/dictionary modelsName wish use pre-trained acoustic models instead     training models speech data, specify name     parameter. specified, acoustic models trained speech .     Available models listed      https://github.com/MontrealCorpusTools/mfa-models/tree/main/acoustic usePostgres Whether use PostGreSQL relational database engine     Set non-empty value parameter use --use_postgres switch.     Otherwise, MFA uses SQLLite instead (--no_use_postgres). beam value --beam mfa parameter. retryBeam value --retry-beam mfa parameter. noSpeakerAdaptation Whether trained acoustic models adapted     speaker alignment . Set non-empty value parameter use     --uses_speaker_adaptation False switch, omit parameter otherwise noCleanupOnFailure error occurs, working files deleted default.     Set non-empty value working files left place manual inspection. ignoreAlignmentStatuses Set non-empty value parameter     overwrite manual alignments, otherwise omit parameter. wordAlignmentLayerId Output layer word alignments     saved. can word update main word token alignments,     phrase layer save alignments separately main word token alignments.     specified layer exist, phrase layer created. phoneAlignmentLayerId Output layer phone alignments     saved. can segment update main phone segment alignments,     phrase layer save alignments separately main phone segment alignments.     specified layer exist, phrase layer created. utteranceTagLayerId Optional output layer time stamp tagging     aligned utterance. specified layer exist, phrase layer     created.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"mfa-alignment-with-general-american-english-arpabet-models","dir":"Articles > Examples","previous_headings":"Forced alignment > Montreal Forced Aligner","what":"MFA Alignment with General American English ARPAbet Models","title":"Forced Alignment Comparison","text":"MFA provides set pre-trained English models trained 982 hours speech 2484 American English speakers LibriSpeech corpus, (Vassil Panayotov Guoguo Chen Daniel Povey Sanjeev Khudanpur (2015) “Librispeech: ASR corpus based public domain audio books”, 2015 IEEE International Conference Acoustics, Speech Signal Processing (ICASSP), pp 5206-5210, DOI:10.1109/ICASSP.2015.7178964) pronunciations ARPAbet encoded General American English dictionary. layer set use configuration:","code":"mfaGAm <- newLayer(   url, \"mfaGAm\",    description = \"Word alignments from MFA using an ARPAbet dictionary and pretrained models.\",   alignment = 2, parent.id = \"turn\", # a phrase layer   annotator.id = \"MFA\",    annotator.task.parameters = paste(     \"orthographyLayerId=orthography\",     \"dictionaryName=english_us_arpa\",     \"modelsName=english_us_arpa\",     \"wordAlignmentLayerId=mfaGAm\",       # save word alignments to this layer     \"phoneAlignmentLayerId=mfaGAmPhone\", # this will be created by the annotator     sep=\"&\"))"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"mfa-alignment-with-ipa-models-and-a-non-rhotic-dictionary","dir":"Articles > Examples","previous_headings":"Forced alignment > Montreal Forced Aligner","what":"MFA Alignment with IPA Models and a Non-rhotic Dictionary","title":"Forced Alignment Comparison","text":"MFA also includes IPA-encoded models trained 3687 hours English speech number varieties, IPA-encoded British English pronunciation dictionary may perform better New Zealand English data, varieties non-rhotic (unlike US English dictionary used mfaGAm layer ). configuration uses pre-trained English models pronunciations IPA encoded British English dictionary.","code":"# create layer mfaUKE <- newLayer(   url, \"mfaUKE\",    description = \"Word alignments from MFA using an IPA dictionary and pretrained models.\",   alignment = 2, parent.id = \"turn\", # a phrase layer   annotator.id = \"MFA\",    annotator.task.parameters = paste(     \"orthographyLayerId=orthography\",     \"dictionaryName=english_uk_mfa\",     \"modelsName=english_mfa\",     \"wordAlignmentLayerId=mfaUKE\",       # save word alignments to this layer     \"phoneAlignmentLayerId=mfaUKEPhone\", # this will be created by the annotator     sep=\"&\"))"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"bas-web-service-and-maus-basic","dir":"Articles > Examples","previous_headings":"Forced alignment","what":"BAS Web Service and MAUS Basic","title":"Forced Alignment Comparison","text":"MAUSBasic web service; part CLARIN-D’s BAS Web Services suite provides web service MAUS forced aligner, supports number languages varieties. LaBB-CAT integrates BAS Web Services using module called BASAnnotator (also provides access G2P BAS web service): annotator connects BAS web services    -      http://hdl.handle.net/11858/00-1779-0000-0028-421B-4,    hosted Ludwig Maximilians Universität München -   various annotation tasks. Current annotation tasks include: Using G2P annotate words phonemic transcription, given orthography. Using  WebMAUSBasic force-align utterances, given orthographic transcriptions. Please note using services requires sending transcript, annotation,   audio data internet external provider services. Configuration parameters encoded URL query string, e.g. orthographyLayerId=orthography&service=MAUSBasic&forceLanguageMAUSBasic=deu-DE&phonemeEncoding=disc&wordAlignmentLayerId=word&phoneAlignmentLayerId=segment&utteranceTagLayerId=bas Parameters : orthographyLayerId Input layer words come. transcriptLanguageLayerId Transcript attribute overall language. targetLanguagePattern Regular expression ISO language codes     languages target, blank . service BAS web service use - \"MAUSBasic\" \"G2P\" phonemeEncoding disc sampa x-sampa maus-sampa ipa arpabet forceLanguageMAUSBasic Language tell MAUSBasic web service     utterances , regardless language transcript (Optional -     service=MAUSBasic ). forceLanguageG2P Language tell G2P web service     utterances , regardless language transcript (Optional -     service=G2P ). pronunciationLayerId Output layer pronunciations     added (service=G2P ). wordStress Send non-empty value parameter include     lexical stress marks, omit parameter omit stress marks     (service=G2P ). syllabification Send non-empty value parameter include     syllabification marks, omit parameter syllabification marks     (service=G2P ). wordAlignmentLayerId Output layer word alignments     saved. can word update main word token alignments,     phrase layer save alignments separately main word token alignments.     specified layer exist, phrase layer created     (service=MAUSBasic ). phoneAlignmentLayerId Output layer phone alignments     saved. can segment update main phone segment alignments,     phrase layer save alignments separately main phone segment alignments.     specified layer exist, phrase layer created     (service=MAUSBasic ). utteranceTagLayerId Optional output layer time stamp tagging     aligned utterance. specified layer exist, phrase layer     created (service=MAUSBasic ). New Zealand English supported explicitly MAUSBasic, layer set using following configuration:","code":"maus <- newLayer(   url, \"maus\",    description = \"Word alignments from MAUSBasic web service provided by the BAS Web Services.\",   alignment = 2, parent.id = \"turn\", # a phrase layer   annotator.id = \"BAS\",    annotator.task.parameters = paste(     \"service=MAUSBasic\",     \"orthographyLayerId=orthography\",     \"forceLanguageMAUSBasic=eng-NZ\",   # New Zealand English     \"phonemeEncoding=disc\",            # use DISC for phone labels     \"wordAlignmentLayerId=maus\",       # save word alignments to this layer     \"phoneAlignmentLayerId=mausPhone\", # this will be created by the annotator     sep = \"&\"))"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"upload-transcripts-and-recordings","dir":"Articles > Examples","previous_headings":"","what":"Upload transcripts and recordings","title":"Forced Alignment Comparison","text":"speech force-aligned New Zealand English, transcribed Praat. corpus (!) small, enough illustrate ’s possible. TextGrid files uploaded corresponsing .wav files. TextGrids include manually aligned words segments (phones). phone labels use CELEX ‘DISC’ encoding, utilises one character per phoneme. ‘gold standard’ alignments evaluating forced alignment configuration. point manually aligned transcripts uploaded, forced-alignment configurations run.","code":"# for each transcript for (transcriptName in transcriptFiles) {   transcript <- file.path(dataDir, transcriptName)      # locate recording   noExtension <- substr(transcriptName, 1, nchar(transcriptName) - 9)   wav <- file.path(dataDir, paste(noExtension, \".wav\", sep=\"\"))   if (!file.exists(wav)) {     wav <- file.path(dataDir, paste(noExtension, \".WAV\", sep=\"\"))   }   if (!file.exists(wav)) cat(paste(wav, \"doesn't exist\\n\"))   if (!file.exists(transcript)) cat(paste(transcript, \"doesn't exist\\n\"))      # upload the transcript/recording   newTranscript(url, transcript, wav, no.progress = TRUE)  } # next trancript cat(paste(\"Transcripts uploaded: \", length(transcriptFiles), \"\\n\")) ## Transcripts uploaded:  1"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"compare-automatic-alignments-with-manual-alignments","dir":"Articles > Examples","previous_headings":"","what":"Compare Automatic Alignments with Manual Alignments","title":"Forced Alignment Comparison","text":"order compare word phone alignments produced forced aligners manual alignments, use LaBB-CAT’s Label Mapper layer manager: annotator creates mapping labels pairs layers, finding   minimum edit path . example, layer manager can used tag phone word   likely counterpart another phonemic transcription: … phonemic encoding: One possible use map non-rhotic phones equivalent rhotic   transcription: Label Mapper can also used compare alternative word/phone alignments -   e.g. may manual word/phone alignment want compare   word/phone alignmentd automatically generated HTK, order measure   accuracy automatic alignments. case, specify two mappings, main mapping pair word   alignment layers, sub-mapping paird phone alignment layers. mappings tracked detail, facilitate comparison alignment   labelling. Mapping information can accessed via 'extensions' page   annotator. details Label Mapper configuration : annotator creates mapping labels two layers, source   layer target layer, finding minimum edit path . phone Sub-mapping may configured mapping word tokens one layer   word tokens another layer. case, map phone tokens source layer   phone tokens target layer - .e. can compare two sets word/phone   annotations. words sourceLayerId assumed divided phones   subSourceLayerId,   words targetLayerId assumed divided phones   subTargetLayerId. mappings tracked detail, facilitate comparison alignment   labelling. Mapping information can accessed via annotator's   extensions. Configuration parameters encoded URL query string, e.g. sourceLayerId=orthography&splitLabels=&mappingLayerId=&comparator=CharacterToCharacter&targetLayerId=mfaPretrainedARPAbet&subSourceLayerId=segment&subComparator=DISCToArpabet&subTargetLayerId=mfaPretrainedARPAbetPhone sourceLayerId Input layer resulting annotations'     labels come come. targetLayerId layer defines tokens tagged.     annotation layer one tag added, one labels     sourceLayerId, unless correspondence can found, case     token tagged. mappingLayerId Output layer mapping Source layer Target     layer. Phone Sub-mapping specified (see ), Source Layer     labels directly mapped Target token appended nearby     Mapping Layer label; .e. appended last one possible. comparator CharacterToCharacter - Orthography → Orthography OrthographyToDISC - Orthography → DISC OrthographyToArpabet - Orthography → ARPAbet DISCToDISC - DISC → DISC DISCToArpabet - DISC → ARPAbet ArpabetToDISC - ARPAbet → DISC IPAToIPA - IPA → IPA DISCToIPA - DISC → IPA IPAToDISC - IPA → DISC splitLabels char - Use similar annotation scope, split label         characters, map labels target layer (e.g. DISC word         transcriptions phones). space - Use similar annotation scope, split label         spaces, map labels target layer (e.g. ARPAbet word         transcriptions phones). (nothing) - Use annotations scope, split         labels (e.g. phone alignments phone alignments). subSourceLayerId splitLabels parameter omitted, comparator set CharacterToCharacter subTargetLayerId tokens tagged sub-mapping. subComparator CharacterToCharacter - Orthography → Orthography OrthographyToDISC - Orthography → DISC OrthographyToArpabet - Orthography → ARPAbet DISCToDISC - DISC → DISC DISCToArpabet - DISC → ARPAbet ArpabetToDISC - ARPAbet → DISC IPAToIPA - IPA → IPA DISCToIPA - DISC → IPA IPAToDISC - IPA → DISC comparison set forced-alignment configurations , .e automatic word alignment matched corresponding manual word alignment, within word, automatic phone alignment matched corresponding manual phone alignment. done, ’s possible measure degree automatic alignments overlap manual ones.","code":"# compare p2fa alignments with manual ones p2faComp <- newLayer(   url, \"p2faComp\",    description = \"Compare P2FA alignments with Manual alignments.\",   alignment = 2, parent.id = \"turn\", # a phrase layer   annotator.id = \"labelmapper\",    annotator.task.parameters = paste(     \"sourceLayerId=orthography\",     \"targetLayerId=p2fa\",     \"splitLabels=\",                    # no splitting; target to source annotations map 1:1     \"comparator=CharacterToCharacter\", # word tokens use plain orthography     \"subSourceLayerId=segment\",     \"subTargetLayerId=p2faPhone\",      \"subComparator=DISCToArpabet\",     # phone tokens in p2faPhone use ARPAbet encoding     sep=\"&\")) generateLayer(url, \"p2faComp\") ## [1] \"Finished.\" # compare MFA ARPAbet alignments with manual ones mfaGAmComp <- newLayer(   url, \"mfaGAmComp\",    description = \"Compare MFA ARPAbet pretrained-model alignments with Manual alignments.\",   alignment = 2, parent.id = \"turn\", # a phrase layer   annotator.id = \"labelmapper\",    annotator.task.parameters = paste(     \"sourceLayerId=orthography\",     \"targetLayerId=mfaGAm\",     \"splitLabels=\",                    # no splitting; target to source annotations map 1:1     \"comparator=CharacterToCharacter\", # word tokens use plain orthography     \"subSourceLayerId=segment\",     \"subTargetLayerId=mfaGAmPhone\",      \"subComparator=DISCToArpabet\",     # phone tokens in mfaGAmPhone use ARPAbet encoding     sep=\"&\")) generateLayer(url, \"mfaGAmComp\") ## [1] \"Finished.\" # compare MFA non-rhotic IPA alignments with manual ones mfaUKEComp <- newLayer(   url, \"mfaUKEComp\",    description = \"Compare MFA IPA pretrained-model alignments with Manual alignments.\",   alignment = 2, parent.id = \"turn\", # a phrase layer   annotator.id = \"labelmapper\",    annotator.task.parameters = paste(     \"sourceLayerId=orthography\",     \"targetLayerId=mfaUKE\",     \"splitLabels=\",                    # no splitting; target to source annotations map 1:1     \"comparator=CharacterToCharacter\", # word tokens use plain orthography     \"subSourceLayerId=segment\",     \"subTargetLayerId=mfaUKEPhone\",      \"subComparator=DISCToIPA\",         # phone tokens in mfaUKEPhone use IPA encoding     sep=\"&\")) generateLayer(url, \"mfaUKEComp\") ## [1] \"Finished.\" # compare MAUSBasic alignments with manual ones mausComp <- newLayer(   url, \"mausComp\",    description = \"Compare MAUS Basic New Zealand English alignments with Manual alignments.\",   alignment = 2, parent.id = \"turn\", # a phrase layer   annotator.id = \"labelmapper\",    annotator.task.parameters = paste(     \"sourceLayerId=orthography\",     \"targetLayerId=maus\",     \"splitLabels=\",                    # no splitting; target to source annotations map 1:1     \"comparator=CharacterToCharacter\", # word tokens use plain orthography     \"subSourceLayerId=segment\",     \"subTargetLayerId=mausPhone\",      \"subComparator=DISCToDISC\",        # phone tokens in mausPhone use DISC encoding     sep=\"&\")) generateLayer(url, \"mausComp\") ## [1] \"Finished.\""},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/forced-alignment-comparison.html","id":"edit-paths-and-alignment-comparisons","dir":"Articles > Examples","previous_headings":"","what":"Edit Paths and Alignment Comparisons","title":"Forced Alignment Comparison","text":"LabelMapper extended API exporting information edit-paths computed, resulting alignment comparisons. annotator creates mapping labels pair layers, finding   minimum edit path . sub-mappings configured - two   pairs layers mapped, two word layers two corresponding phone layers -   mappings tracked detail alignments label assignments can   compared. API provides access tracked sub-mapping information, including raw   mapping data summary information including mean Overlap Rate. Paulo Oliveira (2004)      devised Overlap Rate (OvR) compare alignments, measures     much two intervals overlap, independent absolute durations. OvR     calculated follows: result value 0 1. value 0 means two intervals     overlap , 1 meaning completely overlap (.e.,     alignments exactly agree). Overlap Rate several advantages comparing     start/end offsets directly: provides single result, need specify different thresholds       offset accuracy. gives measure time-spans (rather time-points) align,       time-spans correspond directly usually primary unit       interest: phones. ensures small absolute discrepancy alignment serious       short intervals longer ones. extension API can used list download tracked mappings, using   following endpoints, accessed GET http request: listMappings Lists tracked mappings. response JSON-encoded list     strings formatted sourceLayerId→targetLayerId, representing tracked mappings     can accessed via endpoints. summarizeMapping?id utteranceCount - number utterances mapping stepCount - total number edit steps meanOverlapRate - mean overlap rate across edit steps sourceCount - number source annotations mapped targetCount - number target annotations mapped mappingToCsv?id transcript - Transcript ID scope - Parent utterance/word ID URL - URL utterance step - edit step index sequence sourceLayer - Layer source annotations sourceParentId - ID parent source annotation, sub-mapping sourceParentLabel - Label parent source annotation, sub-mapping sourceId - ID source annotation sourceLabel - Label source annotation sourceStart - Start offset source annotation sourceEnd - End offset source annotation targetLayer - Layer target annotations targetParentId - ID parent target annotation, sub-mapping targetParentLabel - Label parent target annotation, sub-mapping targetId - ID target annotation targetLabel - Label target annotation targetStart - Start offset target annotation targetEnd - End offset target annotation operation - edit operation:         + insert, - delete, ! change, = change distance - Distance (cost) edit step hierarchy - mappings position sub-mapping hierarchy:         parent, child, none overlapRate - per Paulo Oliveira (2004):         0 means overlap , 1 means complete overlap deleteMapping?id Deletes data associated given     mapping. query string mapping ID returned listMappings. mean overlap rates forced alignment configurations can directly compared, extracting mapping summaries comparing : LabelMapper module can also provide finely-grained details mappings - .e. exactly manual phones mapped automatic phones. allows closer analysis forced-alignments, beyond overlap rate summary. example, allows us identify phones produced forced aligner corresponding phone manual alignments; forced aligners using rhotic dictionary expected produce many spurious /r/ segments really present non-rhotic speech corpus: detailed mapping information, ’s possible : identify segments added removed analyse types segments aligned accurately, e.g. vowels vs. consonants, etc. apply alignment accuracy measurements Overlap Rate","code":"p2faPhone <- jsonlite::fromJSON(   annotatorExt(url, \"LabelMapper\", \"summarizeMapping\", list(\"segment\",\"p2faPhone\"))) mfaGAmPhone <- jsonlite::fromJSON(   annotatorExt(url, \"LabelMapper\", \"summarizeMapping\", list(\"segment\",\"mfaGAmPhone\"))) mfaUKEPhone <- jsonlite::fromJSON(   annotatorExt(url, \"LabelMapper\", \"summarizeMapping\", list(\"segment\",\"mfaUKEPhone\"))) mausPhone <- jsonlite::fromJSON(   annotatorExt(url, \"LabelMapper\", \"summarizeMapping\", list(\"segment\",\"mausPhone\")))  knitr::kable(rbind(p2faPhone, mfaGAmPhone, mfaUKEPhone, mausPhone)) # get edit paths for manual-to-P2FA comparison p2faPhoneEditPaths <- read.csv(   text = annotatorExt(url, \"LabelMapper\", \"mappingToCsv\", list(\"segment\",\"p2faPhone\"))) # show a sample of the paths to give an idea knitr::kable(head(   p2faPhoneEditPaths[     c(\"sourceParentLabel\", \"sourceLabel\", \"sourceStart\",\"sourceEnd\",        \"targetLabel\", \"targetStart\",\"targetEnd\", \"overlapRate\")]),   # tweak some column names for display purposes   col.names = c(\"Word\",\"sourceLabel\", \"sourceStart\",\"sourceEnd\",        \"targetLabel\", \"targetStart\",\"targetEnd\", \"OvR\")) # identify all edit steps where a phone is added - i.e. the source phone label is empty spuriousSegments <- subset(p2faPhoneEditPaths, sourceLabel == \"\") # count these spurious segments grouping by their label to see which is most common knitr::kable(   aggregate(spuriousSegments$targetLabel,              by=list(spuriousSegments$targetLabel),              FUN=length),   col.names = c(\"Spurious Segment\", \"Count\"))"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/search-labels-alignments-praat-script.html","id":"computing-centre-of-gravity-for-s-in-different-contexts","dir":"Articles > Examples","previous_headings":"","what":"Computing Centre of Gravity for /s/ in different contexts","title":"Search, Annotation, and Praat Script Example","text":"particular, interested pronunciation phoneme /s/ specific contexts, see whether pronunciation sometimes like [ʃ] [s]. might expect /s/ “seat” like [s], /s/ “street” might pronounced like [ʃ]. order , ’re going identify /s/ tokens following contexts: /s/ /p/, /t/, /k/, followed vowel, /s/ /p/, /t/, /k/, followed /ɹ/, /s/ /tj/, comparison, comparison purposes, also want /s/ /ʃ/ tokens take ‘canonical’ pronunciation. find: word-inital /s/ /ʃ/, followed FLEECE, THOUGHT, START vowel contexts identified different regular expression, assuming phonemes encoded using CELEX ‘DISC’ encoding, uses exactly one ASCII character per phoneme: measure pronunciation /s/ tokens, use spectral Centre Gravity (CoG) fricative, determine using custom Praat script executed LaBB-CAT token. analysis extracting data, may also want information, e.g. speaker demographics like age gender phone immediately follows token phonemic transcription syllable duration phones syllables order extract data need, need : identify tokens match target contexts get various types annotations tokens get alignments (start/end times) provide Praat script LaBB-CAT, extract resulting acoustic measures. First nzilbb.labbcat package must loaded, LaBB-CAT corpus specified: Conduct search contexts ’re interested ; search context syllable layer, specify segment ’re targeting analysis, .e. /s/. order compare pronunciations ‘standard’ pronunciation /s/ /ʃ/, also identify ‘reference’ phones; .e./s/ /ʃ/ beginning word, followed FLEECE, THOUGHT, START vowel (‘phonemes’ layer contains phonemic transcription whole word, using layer allows us anchor pattern start word). ’ll combine data frames one convenience; can use matches$SearchName distinguish necessary: gives us data frame different tokens, start/end times tokens, also want word’s phonemic transcription, speaker’s gender age: also want start/end times phonemic transcription labels syllable /s/ /ʃ/ token: start/end times segment follows token: Now want calculate Centre Gravity (CoG) target segment. , use custom Praat script called CoGFinder.praat. script provides measure Center Gravity three points fricative (among things). give MatchId, start/end token, ensure Praat extracts 0.5s acoustic context /token. dataset now includes sufficient information study pronunciation /s/ relates context speaker: tokens /s/ /ʃ/ various contexts, including start/end time, demographic information speaker, phonemic transcription word, syllable token appears, including start/end time, following phone, including start/end time, Centre Gravity various points throughout token","code":"sptkV <- \".*s[ptk][cCEFHiIPqQuUV0123456789~#{$@].*\" sptkr <- \".*s[ptk]r.*\" stj   <- \".*stj.*\" sSV   <- \"[sS][i$#].*\" require(nzilbb.labbcat) labbcat.url <- \"https://labbcat.canterbury.ac.nz/demo/\" labbcat.url <- Sys.getenv('TEST_READ_LABBCAT_URL') # load details from .Renviron file credentialError <- labbcatCredentials(   labbcat.url, Sys.getenv('TEST_READ_LABBCAT_USERNAME'), Sys.getenv('TEST_READ_LABBCAT_PASSWORD')) sptkV.matches <- getMatches(labbcat.url, list(syllables = sptkV, segment = \"s\")) sptkr.matches <- getMatches(labbcat.url, list(syllables = sptkr, segment = \"s\")) stj.matches <- getMatches(labbcat.url, list(syllables = stj, segment = \"s\"))  c(paste(\"There are\", nrow(sptkr.matches), \"tokens of ...s[ptk]r...\"),   paste(\"There are\", nrow(sptkV.matches), \"tokens of ...s[ptk]V...\"),   paste(\"There are\", nrow(stj.matches), \"tokens of ...stj...\")) ## [1] \"There are 118 tokens of ...s[ptk]r...\" ## [2] \"There are 489 tokens of ...s[ptk]V...\" ## [3] \"There are 10 tokens of ...stj...\" sSV.matches <- getMatches(labbcat.url, list(phonemes = sSV, segment = \"[sS]\"))  paste(\"There are\", nrow(sSV.matches), \"reference tokens of [sS]V...\") ## [1] \"There are 282 reference tokens of [sS]V...\" matches <- rbind(sptkV.matches, sptkr.matches, stj.matches, sSV.matches)  paste(\"Total tokens:\", nrow(matches)) ## [1] \"Total tokens: 899\" head(matches)[, c(   \"Text\", \"Target.segment\", \"Target.segment.start\", \"Target.segment.end\")] ##          Text Target.segment Target.segment.start Target.segment.end ## 1 experiences              s                12.92              12.99 ## 2       stood              s                52.93              53.03 ## 3      stay .              s                60.45              60.62 ## 4      escape              s                74.29              74.44 ## 5 substantial              s               136.57             136.66 ## 6     twisted              s               144.25             144.29 matches <- matches |> appendLabels(   c(\"phonemes\", \"participant_gender\", \"participant_age_category\"))  head(matches)[, c(   \"Text\", \"phonemes\", \"participant_age_category\", \"participant_gender\")] ##          Text    phonemes participant_age_category participant_gender ## 1 experiences Iksp7r7nsIz                    36-45                  M ## 2       stood        stUd                    36-45                  M ## 3      stay .         st1                    36-45                  M ## 4      escape       Isk1p                    36-45                  M ## 5 substantial   s@bst{nSP                    36-45                  M ## 6     twisted     twIstId                    36-45                  M matches <- matches |> appendOffsets(\"syllables\")  head(matches)[, c(   \"Text\", \"Target.segment\", \"syllables\", \"syllables.start\", \"syllables.end\")] ##          Text Target.segment syllables syllables.start syllables.end ## 1 experiences              s      'sp7           12.92         13.11 ## 2       stood              s     'stUd           52.93         53.24 ## 3      stay .              s      'st1           60.45         61.21 ## 4      escape              s     'sk1p           74.29         74.70 ## 5 substantial              s     'st{n          136.57        136.94 ## 6     twisted              s      stId          144.25        144.44 matches <- matches |> appendOffsets(\"segment\", target.offset = 1)  head(matches)[, c(   \"Token.plus.1.segment\", \"Token.plus.1.segment.start\", \"Token.plus.1.segment.end\")] ##   Token.plus.1.segment Token.plus.1.segment.start Token.plus.1.segment.end ## 1                    p                      12.99                    13.06 ## 2                    t                      53.03                    53.11 ## 3                    t                      60.62                    60.72 ## 4                    k                      74.44                    74.53 ## 5                    t                     136.66                   136.73 ## 6                    t                     144.29                   144.38 script <- readLines(\"CoGFinder.praat\") matches <- matches |> appendFromPraat(   Target.segment.start, Target.segment.end, script, window.offset=0.5)  head(matches)[, c(\"Text\", \"cog1\", \"cog2\", \"cog3\")] ##          Text     cog1     cog2     cog3 ## 1 experiences 6072.962 6266.089 6961.379 ## 2       stood 4543.998 5214.732 5404.704 ## 3      stay . 5118.318 4298.182 4407.484 ## 4      escape 4784.069 4667.481 4478.938 ## 5 substantial 4185.975 4278.835 4386.030 ## 6     twisted 4424.939 4193.710 3932.203"},{"path":"https://nzilbb.github.io/labbcat-R/articles/examples/search-labels-alignments-r-script.html","id":"example-the-effects-of-morphology-and-demographics-on-the-acoustic-properties-of-s","dir":"Articles > Examples","previous_headings":"","what":"Example: the effects of morphology and demographics on the acoustic properties of /s/","title":"Search, Annotation, and R Script Example","text":"particular, might interested whether /s/ mis prefixed word like mistimes pronounced differently mis unprefixed word like mistakes, whether demographics speaker make difference. First nzilbb.labbcat package must loaded, LaBB-CAT corpus specified: Now search LaBB-CAT corpus force-aligned words orthography starts “dis” “mis”. order able analyse /s/ segments, need ’s start end time, can extract matching sound sample. identify first three segment annotations token, last /s/ segment ’re interested . want check whether acoustic properties /s/ vary depending whether ’s morphological prefix , need morphological parses word token. also extract demographic information speakers. want perform acoustic analysis, need wav sample match, can extracted LaBB-CAT mono 22kHz files using getSoundFragments. Now tokens /s/, want use R perform acoustic analysis sound token, save resulting acoustic measurements data frame results. way example, Koenig et al. (2013) propose 8-factor multitaper spectrum calculated 25 ms portions segment, .e. 8 independent estimates spectrum single time window calculated averaged. use custom R script (adapted script written Patrick Reidy, kindly given permission use example) provide function called process.wav takes .wav file given token returns Koenig et al. (2013) measures. function defined hayhawkins-multitaper.R, must loaded: process.wav function processes single sound file, apply /s/ tokens, add resulting acoustic measures matches data frame. Now sound files downloaded processed, don’t need , tidily delete save disk space. process.wav function produces 12 acoustic measures, three printed way example: freqM - peak frequency ‘medium’ range (3kHz 7kHz) freqH - peak frequency ‘high’ range (7kHz Nyquist frequency) CoG - centre gravity whole spectrum dataset now includes acoustic measurements allowing study acoustic properties /s/, relation morphology speaker demographics: tokens /s/ dis/mis prefixed words, demographic information speaker, morphological parse word, various acoustic measures computed audio using R script","code":"require(nzilbb.labbcat) labbcat.url <- Sys.getenv('TEST_READ_LABBCAT_URL') # load details from .Renviron file credentialError <- labbcatCredentials(   labbcat.url, Sys.getenv('TEST_READ_LABBCAT_USERNAME'), Sys.getenv('TEST_READ_LABBCAT_PASSWORD')) matches <- getMatches(labbcat.url, list(orthography = \"[dm]is.+\"), anchor.confidence.min = 50)  # show the first few matches head(matches)[, c(\"Transcript\", \"Target.word\", \"Target.word.start\")] ##              Transcript Target.word Target.word.start ## 1     AP2505_Nelson.eaf    distance           305.480 ## 2     AP2505_Nelson.eaf    distance           345.300 ## 3 AP2516_JasonEager.eaf        miss           257.580 ## 4 AP2516_JasonEager.eaf        miss           259.740 ## 5 AP2516_JasonEager.eaf      miss .           262.180 ## 6 AP2516_JasonEager.eaf        miss           266.759 matches <- matches |> appendOffsets(\"segment\", annotations.per.layer=3)  # show the first few alignments head(matches)[, c(   \"Text\", \"segment.3\", \"segment.3.start\", \"segment.3.end\")] ##       Text segment.3 segment.3.start segment.3.end ## 1 distance         s         305.640       305.690 ## 2 distance         s         345.420       345.480 ## 3     miss         s         257.750       257.930 ## 4     miss         s         259.880       260.030 ## 5   miss .         s         262.490       262.990 ## 6     miss         s         266.899       267.039 matches <- matches |> appendLabels(   c(\"morphology\", \"participant_age_category\", \"participant_gender\"))  # show the first few annotations head(matches)[, c(   \"Text\", \"morphology\", \"participant_age_category\", \"participant_gender\")] ##       Text   morphology participant_age_category participant_gender ## 1 distance distant+ance                    36-45                  M ## 2 distance distant+ance                    36-45                  M ## 3     miss         Miss                    26-35                  M ## 4     miss         Miss                    26-35                  M ## 5   miss .         Miss                    26-35                  M ## 6     miss         Miss                    26-35                  M # define subdirectory to save the files in subdir <- \"s-tokens\"  # get segment sound files from LaBB-CAT wav.files <- getSoundFragments(   labbcat.url, matches$Transcript, matches$segment.3.start, matches$segment.3.end, 22050,    path=subdir)  # show the first few file names head(wav.files) ## [1] \"s-tokens/AP2505_Nelson__305.640-305.690.wav\"     ## [2] \"s-tokens/AP2505_Nelson__345.420-345.480.wav\"     ## [3] \"s-tokens/AP2516_JasonEager__257.750-257.930.wav\" ## [4] \"s-tokens/AP2516_JasonEager__259.880-260.030.wav\" ## [5] \"s-tokens/AP2516_JasonEager__262.490-262.990.wav\" ## [6] \"s-tokens/AP2516_JasonEager__266.899-267.039.wav\" source('hayhawkins-multitaper.R') s.measures.lists <- lapply(wav.files, process.wav)  # combine the acoustic measures with the matches matches <- cbind(matches, as.data.frame(rbindlist(s.measures.lists))) unlink(subdir, recursive = TRUE) head(matches)[, c(\"Number\", \"Text\", \"segment.3.start\", \"freqM\", \"freqH\", \"CoG\")] ##   Number     Text segment.3.start    freqM    freqH      CoG ## 1      1 distance         305.640 4401.996 7003.176 6128.388 ## 2      2 distance         345.420 3754.891 7030.435 5779.537 ## 3      3     miss         257.750 6311.413 7030.435 6149.090 ## 4      4     miss         259.880 4673.641 7310.054 6399.511 ## 5      5   miss .         262.490 5712.228 7549.728 7242.374 ## 6      6     miss         266.899 6990.489 7030.435 6858.675"},{"path":"https://nzilbb.github.io/labbcat-R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Fromont. Author, maintainer.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fromont R (2025). nzilbb.labbcat: Accessing Data Stored 'LaBB-CAT' Instances. R package version 1.5-0, https://labbcat.canterbury.ac.nz, https://nzilbb.github.io/labbcat-R/.","code":"@Manual{,   title = {nzilbb.labbcat: Accessing Data Stored in 'LaBB-CAT' Instances},   author = {Robert Fromont},   year = {2025},   note = {R package version 1.5-0, https://labbcat.canterbury.ac.nz},   url = {https://nzilbb.github.io/labbcat-R/}, }"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"nzilbblabbcat-package-for-r-","dir":"","previous_headings":"","what":"nzilbb.labbcat for R","title":"nzilbb.labbcat for R","text":"R package provides functionality querying extracting data LaBB-CAT servers, directly R. LaBB-CAT web-based linguistic annotation store stores audio video recordings, text transcripts, annotations. package provides access basic corpus structure data, pattern-based search, annotation, audio, TextGrid (format) extraction, server-side acoustic measurement Praat. Online documentation available https://nzilbb.github.io/labbcat-R","code":"library(nzilbb.labbcat) labbcat.url <- \"http://localhost:8080/labbcat/\"  # search for tokens of the KIT vowel m <- getMatches(labbcat.url, list(segment=\"I\")) |>   # get morphology of the word, and the participant's gender   appendLabels(c(\"morphology\", \"participant_gender\")) |>   # extract F1, 2, and 3 from the mid-point of each vowel   appendFromPraat(     Target.segment.start, Target.segment.end,     praatScriptFormants(c(1,2,3)),      window.offset=0.5)"},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"getting-started","dir":"","previous_headings":"Basic usage instructions","what":"Getting started","title":"nzilbb.labbcat for R","text":"install latest version package CRAN: use : functions, first parameter URL LaBB-CAT instance want interact - e.g. “https://labbcat.canterbury.ac.nz/demo/”. instance password-protected, ’ll prompted username password first time invoke function instance.","code":"install.packages(\"nzilbb.labbcat\") library(nzilbb.labbcat)"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"basic-informational-functions","dir":"","previous_headings":"Basic usage instructions","what":"Basic informational functions","title":"nzilbb.labbcat for R","text":"basic functions provide information LaBB-CAT instance ’re using.","code":"labbcat.url <- \"https://labbcat.canterbury.ac.nz/demo\"  id <- getId(labbcat.url) layers <- getLayerIds(labbcat.url) corpora <- getCorpusIds(labbcat.url)  paste(\"LaBB-CAT instance\", id, \"has\", length(layers), \"layers. The corpora are:\") corpora"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"accessing-specific-transcript-and-participant-ids","dir":"","previous_headings":"Basic usage instructions","what":"Accessing specific transcript and participant IDs","title":"nzilbb.labbcat for R","text":"can get complete list participants transcripts: also ways get filtered list transcripts:","code":"participants <- getParticipantIds(labbcat.url) transcripts <- getTranscriptIds(labbcat.url)  paste(\"There are\", length(participants), \"participants. The first one is\", participants[1]) paste(\"There are\", length(transcripts), \"transcripts. The first one is\", transcripts[1]) ## Transcripts in the UC corpus: getTranscriptIdsInCorpus(labbcat.url, \"UC\")  ## Transcripts featuring the participant QB1602: getTranscriptIdsWithParticipant(labbcat.url, \"QB1602\")  ## Transcripts with 'YW' in their name: getMatchingTranscriptIds(labbcat.url, \"/.*YW.*/.test(id)\")"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"accessing-media","dir":"","previous_headings":"Basic usage instructions","what":"Accessing Media","title":"nzilbb.labbcat for R","text":"Given transcript ID can access information media available:","code":"## Download the default WAV file wav.file <- getMedia(labbcat.url, \"AP2515_ErrolHitt.eaf\")  ## Get information about all media available media <- getAvailableMedia(labbcat.url, \"AP2515_ErrolHitt.eaf\")  ## All media file names with their track suffixes and content types media[,c(\"name\",\"trackSuffix\",\"mimeType\")]  ## Download a specific media file quake.face.video.file <- getMedia(labbcat.url, \"AP2515_ErrolHitt.eaf\",                                   track.suffix = \"_face\", mime.type = \"video/mp4\")  ## tidily delete the files we just downloaded file.remove(wav.file) file.remove(quake.face.video.file)"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"media-fragments","dir":"","previous_headings":"Basic usage instructions","what":"Media fragments","title":"nzilbb.labbcat for R","text":"can access selected fragment wav file getSoundFragments. function downloads wav file current working directory, returns name file: getSoundFragments also accepts vectors id, start, end parameters: means , results csv file exported LaBB-CAT, identifies segment tokens, can iterate rows, downloading corresponding wav files, something like:","code":"wav.file <- getSoundFragments(labbcat.url, \"AP2505_Nelson.eaf\", 10.0, 15.0)  paste(\"The third 5 seconds is in this file:\", wav.file)  ## tidily delete the file we just downloaded file.remove(wav.file) results <- data.frame(   id=c(\"AP2505_Nelson.eaf\", \"AP2512_MattBlack.eaf\", \"AP2512_MattBlack.eaf\"),   start=c(10.0, 20.0, 30.0),   end=c(15.0, 25.0, 35.0))  wav.files <- getSoundFragments(labbcat.url, results$id, results$start, results$end, no.progress = TRUE)  wav.files  ## tidily delete the files we just downloaded file.remove(wav.files) ## load the results from the CSV file results <- read.csv(\"results.csv\", header=T)  ## download all the segment WAV files wav.files <- getSoundFragments(     labbcat, results$Transcript, results$segment.start, results$segment.end)"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"getting-annotations-from-other-layers","dir":"","previous_headings":"Basic usage instructions","what":"Getting annotations from other layers","title":"nzilbb.labbcat for R","text":"search results CSV file, like retrieve annotations layer, can use getMatchLabels function, providing MatchId column (URL column) indentifies token, desired layer name: want alignment information - .e. start end time – can use getMatchAlignments:","code":"results <- read.csv(\"results.csv\", header=T) phonemes <- getMatchLabels(labbcat.url, results$MatchId, c(\"participant_age\", \"phonemes\")) results <- read.csv(\"results.csv\", header=T) phonemes <- getMatchAlignments(labbcat.url, results$MatchId, \"syllables\")"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"search","dir":"","previous_headings":"Basic usage instructions","what":"Search","title":"nzilbb.labbcat for R","text":"Searching matching tokens can achieved using getMatches function. basic search can achieved simple, single-layer pattern like: complex patterns, across multiple tokens multiple layers, possible specifying complex structure: data frame ’s returned contains columns can used parameters functions:","code":"# all words starting with \"ps...\" results <- getMatches(labbcat.url, list(orthography = \"ps.*\")) # the word 'the' followed immediately or with one intervening word by # a hapax legomenon (word with a frequency of 1) that doesn't start with a vowel results <- getMatches(labbcat.url, list(columns = list(      list(layers = list(             orthography = list(pattern = \"the\")),           adj = 2),      list(layers = list(             phonemes = list(not = TRUE, pattern = \"[cCEFHiIPqQuUV0123456789~#\\\\{\\\\$@].*\"),             frequency = list(max = \"2\")))))) # get all instances of the KIT vowel results <- getMatches(labbcat.url, list(segment = \"I\"))   # get phonemic transcription for the whole word phonemes  <- getMatchLabels(labbcat.url, results$MatchId, \"phonemes\")  # download all the segment WAV files wav.files <- getSoundFragments(     labbcat.url, results$Transcript, results$Target.segment.start, results$Target.segment.end)"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"looking-up-dictionaries","dir":"","previous_headings":"Basic usage instructions","what":"Looking up dictionaries","title":"nzilbb.labbcat for R","text":"LaBB-CAT maintains number dictionaries uses look things . include access CELEX, LIWC, lexicons might set LaBB-CAT instance. can list available dictionaries using: one returned layer manager ID dictionary ID pairs, can look dictionary entries list keys:","code":"dictionaries <- getDictionaries(labbcat.url) words <- c(\"the\", \"quick\", \"brown\", \"fox\") pronunciation <- getDictionaryEntries(labbcat.url, \"CELEX-EN\", \"Phonology (wordform)\", words)"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"process-with-praat","dir":"","previous_headings":"Basic usage instructions","what":"Process with Praat","title":"nzilbb.labbcat for R","text":"function instructs LaBB-CAT server invoke Praat set sound intervals, order extract acoustic measures. exact measurements return depend praat.script invoked. Praat script fragment run sound interval specified. functions allow generation number pre-defined praat scripts common tasks formant, pitch, intensity, centre gravity: can provide script, either building string code, loading one file.","code":"# Perform a search results <- getMatches(labbcat.url, list(segment=\"I\"))  # get F1 and F2 for the mid point of the vowel formants <- processWithPraat(        labbcat.url,        results$MatchId, results$Target.segment.start, results$Target.segment.end,        praatScriptFormants(),        no.progress=TRUE) # execute a custom script loaded form a file acoustic.measurements <- processWithPraat(        labbcat.url,        results$MatchId, results$Target.segment.start, results$Target.segment.end,        readLines(\"acousticMeasurements.praat\"))"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"retrieving-transcript-and-participant-attributes","dir":"","previous_headings":"Basic usage instructions","what":"Retrieving transcript and participant attributes","title":"nzilbb.labbcat for R","text":"Transcript attributes can retrieved like : Similarly, participant attributes can also accessed:","code":"# Get language, duration, and corpus for transcripts starting with 'BR' attributes <- getTranscriptAttributes(labbcat.url,             getMatchingTranscriptIds(labbcat.url, \"/BR.+/.test(id)\"),             c('transcript_language', 'transcript_duration', 'corpus')) # Get gender and age for all participants attributes <- getParticipantAttributes(labbcat.url,             getParticipantIds(labbcat.url),             c('participant_gender', 'participant_age'))"},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"prerequesites","dir":"","previous_headings":"","what":"Prerequesites","title":"nzilbb.labbcat for R","text":"Developer tools: building documentation pkgdown:","code":"R -e \"install.packages('devtools')\" apt install pandoc R -e \"install.packages('pkgdown')\""},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"building-the-package-and-documentation","dir":"","previous_headings":"","what":"Building the package and documentation","title":"nzilbb.labbcat for R","text":"package can built source code using using:","code":"./build.sh"},{"path":"https://nzilbb.github.io/labbcat-R/index.html","id":"running-automated-tests","dir":"","previous_headings":"","what":"Running automated tests","title":"nzilbb.labbcat for R","text":"Unit tests use ‘testthat’ package, requires one-time installation: tests assume access least one LaBB-CAT server, URL credentials defined environment variables, must create .Renviron file something like: can use following commands run unit tests: Specific tests can run like :","code":"R -e \"install.packages('testthat')\" TEST_READ_LABBCAT_URL=https://labbcat.canterbury.ac.nz/demo/ TEST_READ_LABBCAT_USERNAME=demo TEST_READ_LABBCAT_PASSWORD=demo TEST_ADMIN_LABBCAT_URL=http://localhost:8080/labbcat/ TEST_ADMIN_LABBCAT_USERNAME=labbcat TEST_ADMIN_LABBCAT_PASSWORD=labbcat R -e \"devtools::test()\" R -e \"devtools::test(filter='getId')\""},{"path":"https://nzilbb.github.io/labbcat-R/reference/addDictionaryEntry.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds an entry to a dictionary — addDictionaryEntry","title":"Adds an entry to a dictionary — addDictionaryEntry","text":"function creates adds new entry given dictionary.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/addDictionaryEntry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds an entry to a dictionary — addDictionaryEntry","text":"","code":"addDictionaryEntry(labbcat.url, manager.id, dictionary.id, key, entry)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/addDictionaryEntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds an entry to a dictionary — addDictionaryEntry","text":"labbcat.url URL LaBB-CAT instance manager.id layer manager ID dictionary, returned getDictionaries dictionary.id ID dictionary, returned getDictionaries key key (word) dictionary add entry . entry value (definition) given key.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/addDictionaryEntry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds an entry to a dictionary — addDictionaryEntry","text":"NULL entry added, list error messages .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/addDictionaryEntry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds an entry to a dictionary — addDictionaryEntry","text":"must edit privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/addDictionaryEntry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds an entry to a dictionary — addDictionaryEntry","text":"","code":"if (FALSE) { # \\dontrun{ ## Add the word \"robert\" to the CELEX wordform pronunciation dictionary addDictionaryEntry(labbcat.url, \"CELEX-EN\", \"Phonology (wordform)\", \"robert\", \"'rQ-b@t\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/addLayerDictionaryEntry.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds an entry to a layer dictionary — addLayerDictionaryEntry","title":"Adds an entry to a layer dictionary — addLayerDictionaryEntry","text":"function adds new entry dictionary manages given layer, updates affected tokens corpus. Words can multiple entries.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/addLayerDictionaryEntry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds an entry to a layer dictionary — addLayerDictionaryEntry","text":"","code":"addLayerDictionaryEntry(labbcat.url, layer.id, key, entry)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/addLayerDictionaryEntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds an entry to a layer dictionary — addLayerDictionaryEntry","text":"labbcat.url URL LaBB-CAT instance layer.id ID layer dictionary configured manage . key key (word) dictionary add entry . entry value (definition) given key.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/addLayerDictionaryEntry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds an entry to a layer dictionary — addLayerDictionaryEntry","text":"NULL entry added, list error messages .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/addLayerDictionaryEntry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds an entry to a layer dictionary — addLayerDictionaryEntry","text":"must edit privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/addLayerDictionaryEntry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds an entry to a layer dictionary — addLayerDictionaryEntry","text":"","code":"if (FALSE) { # \\dontrun{ ## Add a pronunciation for the word \"robert\" to the phonemes layer dictionary addLayerDictionaryEntry(labbcat.url, \"phonemes\", \"robert\", \"'rQ-b@t\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/annotatorExt.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve annotator's ","title":"Retrieve annotator's ","text":"Retrieve given resource annotator's \"ext\" web app. Annotators modules perform different annotation tasks, can optionally implement functionality providing extra data extending functionality annotator-specific way. annotator implements \"ext\" web app, can provide resources implement mechanism iterrogating annotator. function provides mechanism accessing resources via R.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/annotatorExt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve annotator's ","text":"","code":"annotatorExt(labbcat.url, annotator.id, resource, parameters = NULL)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/annotatorExt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve annotator's ","text":"labbcat.url URL LaBB-CAT instance. annotator.id ID annotator interrogate. resource name file retrieve instance method (function) invoke. Possible values depend specific annotator interrogated. parameters Optional list ordered parameters instance method (function).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/annotatorExt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve annotator's ","text":"resource requested.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/annotatorExt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve annotator's ","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the version of the currently installed LabelMapper annotator: annotatorExt(labbcat.url, \"LabelMapper\", \"getVersion\")  ## Get the summary of the segment to speakerDependentPhone mapping ## implemented by the LabelMapper annotator: summaryJson <- annotatorExt(labbcat.url,               \"LabelMapper\", \"summarizeMapping\", list(\"segment\",\"speakerDependentPhone\")) summary <- jsonlite::fromJSON(summaryJson) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendFromPraat.html","id":null,"dir":"Reference","previous_headings":"","what":"Appends measurements from Praat to a dataframe of matches. — appendFromPraat","title":"Appends measurements from Praat to a dataframe of matches. — appendFromPraat","text":"version processWithPraat can dataframe matches piped , returns dataframe columns appended.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendFromPraat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Appends measurements from Praat to a dataframe of matches. — appendFromPraat","text":"","code":"appendFromPraat(   matches,   start.column,   end.column,   praat.script,   window.offset,   gender.attribute = \"participant_gender\",   attributes = NULL,   no.progress = FALSE,   labbcat.url = NULL,   column.prefix = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendFromPraat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Appends measurements from Praat to a dataframe of matches. — appendFromPraat","text":"matches dataframe returned getMatches getAllUtterances, identifying results acoustic measurments appended. start.column column matches containing start time seconds. end.column column matches containing end time seconds. praat.script Script run match. may single string character vector. window.offset many circumstances, want context sample start/end time.  reason, can specify \"window offset\" - number seconds subtract sample start add sample end time, extracting part audio processing. example, sample starts 2.0s ends 3.0s, set window offset 0.5s, Praat extract sample audio  1.5s 3.5s, selected processing sample. best value depends praat.script ; getting formants  vowels, including context ensures formants edges accurate (LaBB-CAT's web interface, default value 0.025), getting max pitch COG segment, likely want window.offset 0 ensure neighbouring segments influence measurement. gender.attribute participant attribute represents participant's gender. attributes Vector participant attributes make available script. example, want use different acoustic parameters depending gender speaker , including \"participant_gender\" attribute make variable called participant_gender$ available praat script, whose value gender speaker segment. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive(). labbcat.url URL LaBB-CAT instance (instead inferring matches). column.prefix string prefix new column name .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendFromPraat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Appends measurements from Praat to a dataframe of matches. — appendFromPraat","text":"matches acoustic measurements appended new columns.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendFromPraat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Appends measurements from Praat to a dataframe of matches. — appendFromPraat","text":"instructs LaBB-CAT server invoke Praat set sound intervals, order extract acoustic measures. exact measurements return depend praat.script invoked. Praat script fragment run sound interval specified. functions allow generation number pre-defined praat scripts common tasks formant, pitch, intensity, centre gravity – see praatScriptFormants, praatScriptCentreOfGravity, praatScriptIntensity praatScriptPitch. can provide script, either building string code, loading one file. LaBB-CAT prefixes praat.script code open sound file extract defined part Sound object selected. LaBB-CAT Remove's Sound object script finishes executing. objects created script must Remove'd end script (otherwise Praat runs memory large batches) LaBB-CAT assumes calls function 'print' correspond fields export field must printed line. Specifically scans lines form: print 'myOutputVariable' 'newline$' Variables can assumed already set context script : windowOffset – value used Window Offset; much context include. windowAbsoluteStart – start time window extracted relative start original audio file. windowAbsoluteEnd – end time window extracted relative start original audio file. windowDuration – duration window extracted (including window offset). targetAbsoluteStart – start time target interval relative start original audio file. targetAbsoluteEnd – end time target interval relative start original audio file. targetStart – start time target interval relative start window extracted. targetEnd – end time target interval relative start window extracted. targetDuration – duration target interval. sampleNumber – number sample within set samples processed. sampleName$ – name extracted/selected Sound object.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendFromPraat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Appends measurements from Praat to a dataframe of matches. — appendFromPraat","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all tokens of /I/ results <- getMatches(labbcat.url, list(segment=\"I\")) |>     appendFromPraat( ## get F1 and F2 for the mid point of the vowel        Target.segment.start, Target.segment.end, # for the vowel        praatScriptFormants(),        window.offset=0.5) ## get F1 and F2  ## Get all tokens of /i:/ results <- getMatches(labbcat.url, list(segment=\"i\")) |>    appendFromPraat(        Target.segment.start, Target.segment.end, ## for the target vowel...        paste(            ## ... get first 3 formants at three points during the sample ...            praatScriptFormants(c(1,2,3), c(0.25,0.5,0.75)),            ## ... the mean, min, and max pitch ...            praatScriptPitch(get.mean=TRUE, get.minimum=TRUE, get.maximum=TRUE),            ## ... the max intensity ...            praatScriptIntensity(),            ## ... and the CoG using powers 1 and 2             praatScriptCentreOfGravity(powers=c(1.0,2.0))),        window.offset=0.5)  ## Get all tokens of /s/ results <- getMatches(labbcat.url, list(segment=\"s\")) |>    appendFromPraat(        Target.segment.start, Target.segment.end,        readLines(\"acousticMeasurements.praat\")) ## execute a custom script loaded form a file } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Appends labels of annotations on given layers to a dataframe of matches. — appendLabels","title":"Appends labels of annotations on given layers to a dataframe of matches. — appendLabels","text":"version getMatchLabels can dataframe matches piped , returns dataframe columns appended.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Appends labels of annotations on given layers to a dataframe of matches. — appendLabels","text":"","code":"appendLabels(   matches,   layer.ids,   target.offset = 0,   annotations.per.layer = 1,   page.length = 1000,   no.progress = FALSE,   labbcat.url = NULL,   column.prefix = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Appends labels of annotations on given layers to a dataframe of matches. — appendLabels","text":"matches dataframe returned getMatches getAllUtterances, identifying results annotation labels appended. layer.ids vector layer IDs. target.offset distance original target match, e.g. 0 – find annotations match target 1 – find annotations token immediately match target -1 – find annotations token immediately match target annotations.per.layer number annotations given layer retrieve. cases, one annotation available. However, tokens may, example, annotated `possible phonemic transcriptions', case using value greater 1 parameter provides phonemic transcriptions, tokens one. page.length order prevent timeouts large number matches network connection slow, rather retrieving matches one big request, retrieved using many smaller requests. parameter controls number results retrieved per request. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive(). labbcat.url URL LaBB-CAT instance (instead inferring matches). column.prefix string prefix new column name .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Appends labels of annotations on given layers to a dataframe of matches. — appendLabels","text":"matches labels appended new columns.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendLabels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Appends labels of annotations on given layers to a dataframe of matches. — appendLabels","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search results <- getMatches(labbcat.url, list(orthography=\"quake\")) |>        appendLabels(\"topic\") ## Get the topic annotations for the matches } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendOffsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Appends temporal alignments on given layers to a dataframe of matches. — appendOffsets","title":"Appends temporal alignments on given layers to a dataframe of matches. — appendOffsets","text":"Appends labels start/end offsets annotations given layer, given dataframe matches returned getMatches getAllUtterances.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendOffsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Appends temporal alignments on given layers to a dataframe of matches. — appendOffsets","text":"","code":"appendOffsets(   matches,   layer.ids,   target.offset = 0,   annotations.per.layer = 1,   anchor.confidence.min = 50,   page.length = 1000,   no.progress = FALSE,   labbcat.url = NULL,   column.prefix = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendOffsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Appends temporal alignments on given layers to a dataframe of matches. — appendOffsets","text":"matches dataframe returned getMatches getAllUtterances, identifying results annotation labels appended. layer.ids vector layer IDs. target.offset distance original target match, e.g. 0 – find annotations match target 1 – find annotations token immediately match target -1 – find annotations token immediately match target annotations.per.layer number annotations given layer retrieve. cases, one annotation available. However, tokens may, example, annotated `possible phonemic transcriptions', case using value greater 1 parameter provides phonemic transcriptions, tokens one. anchor.confidence.min minimum confidence alignments, e.g. 0 – return alignments, regardless confidence; 50 – return alignments least automatically aligned; 100 – return manually-set alignments. page.length order prevent timeouts large number matches network connection slow, rather retrieving matches one big request, retrieved using many smaller requests. parameter controls number results retrieved per request. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive(). labbcat.url URL LaBB-CAT instance (instead inferring matches). column.prefix string prefix new column name .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendOffsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Appends temporal alignments on given layers to a dataframe of matches. — appendOffsets","text":"matches labels, start times, end times appended new columns.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendOffsets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Appends temporal alignments on given layers to a dataframe of matches. — appendOffsets","text":"version getMatchAlignments can dataframe matches piped , returns dataframe columns appended. can specify threshold confidence alignment, value 0 (aligned) 100 (manually aligned). default 50 (automatically aligned), alignments least automatically aligned specified. cases token alignment confidence falls threshold, label returned, start/end times NA.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/appendOffsets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Appends temporal alignments on given layers to a dataframe of matches. — appendOffsets","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all tokens of /I/ results <- getMatches(labbcat.url, list(segment=\"I\")) |>     appendOffsets(\"segment\", target.offset=1, ## Get the segment following the token         anchor.confidence.min=100) ## with alignment if it's been manually aligned } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/countAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the number of annotations on the given layer of the given transcript — countAnnotations","title":"Gets the number of annotations on the given layer of the given transcript — countAnnotations","text":"Returns number annotations given layer given transcript.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/countAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the number of annotations on the given layer of the given transcript — countAnnotations","text":"","code":"countAnnotations(labbcat.url, id, layer.id, max.ordinal = NULL)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/countAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the number of annotations on the given layer of the given transcript — countAnnotations","text":"labbcat.url URL LaBB-CAT instance id transcript ID (.e. transcript name) layer.id layer ID max.ordinal maximum ordinal counted annotations. e.g. max.ordinal 1 ensure first annotation parent returned. max.ordinal null, annotations counted, regardless ordinal.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/countAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the number of annotations on the given layer of the given transcript — countAnnotations","text":"number annotations layer","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/countAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the number of annotations on the given layer of the given transcript — countAnnotations","text":"","code":"if (FALSE) { # \\dontrun{ ## Count the number of words in UC427_ViktoriaPapp_A_ENG.eaf token.count <- countAnnotations(labbcat.url, \"UC427_ViktoriaPapp_A_ENG.eaf\", \"orthography\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/countMatchingAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the number of annotations matching a particular pattern — countMatchingAnnotations","title":"Gets the number of annotations matching a particular pattern — countMatchingAnnotations","text":"Returns number annotations corpus match given expression.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/countMatchingAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the number of annotations matching a particular pattern — countMatchingAnnotations","text":"","code":"countMatchingAnnotations(labbcat.url, expression)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/countMatchingAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the number of annotations matching a particular pattern — countMatchingAnnotations","text":"labbcat.url URL LaBB-CAT instance expression expression determines annotations match. must match either id layer.id. expression language currently well defined, based JavaScript syntax. e.g.: id == 'ew_0_456' ['ew_2_456', 'ew_2_789', 'ew_2_101112'].includes(id) layerId == 'orthography' && !/th[aeiou].+/.test(label) graph.id == 'AdaAicheson-01.trs' && layer.id == 'orthography' && start.offset &gt; 10.5 layer.id == 'utterance' && ('word').includes('ew_0_456') layerId = 'utterance' && labels('orthography').includes('foo') layerId = 'utterance' && labels('participant').includes('Ada')","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/countMatchingAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the number of annotations matching a particular pattern — countMatchingAnnotations","text":"number annotations match expression.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/countMatchingAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the number of annotations matching a particular pattern — countMatchingAnnotations","text":"","code":"if (FALSE) { # \\dontrun{ ## count the number of topic tags that include the word 'quake' countMatchingAnnotations(labbcat.url, \"layer.id == 'topic' && /.*quake.*/.test(label)\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes an existing layer — deleteLayer","title":"Deletes an existing layer — deleteLayer","text":"function deletes existing annotation layer, including annotation data associated .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletes an existing layer — deleteLayer","text":"","code":"deleteLayer(labbcat.url, layer.id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deletes an existing layer — deleteLayer","text":"labbcat.url URL LaBB-CAT instance layer.id ID layer delete.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletes an existing layer — deleteLayer","text":"NULL, error message deletion failed.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLayer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deletes an existing layer — deleteLayer","text":"must administration privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLayer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deletes an existing layer — deleteLayer","text":"","code":"if (FALSE) { # \\dontrun{ ## Delete the phonemes layer deleteLayer(labbcat.url, \"phonemes\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLexicon.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a previously loaded lexicon — deleteLexicon","title":"Delete a previously loaded lexicon — deleteLexicon","text":"default LaBB-CAT includes layer manager called Flat Lexicon Tagger, can configured annotate words data dictionary loaded plain text file (e.g. CSV file).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLexicon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a previously loaded lexicon — deleteLexicon","text":"","code":"deleteLexicon(labbcat.url, lexicon)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLexicon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a previously loaded lexicon — deleteLexicon","text":"labbcat.url URL LaBB-CAT instance. lexicon name lexicon delete, e.g. 'cmudict'","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLexicon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a previously loaded lexicon — deleteLexicon","text":"NULL deletion successful, error message .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLexicon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a previously loaded lexicon — deleteLexicon","text":"function deletes lexicon, previously added using loadLexicon. must editing privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteLexicon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a previously loaded lexicon — deleteLexicon","text":"","code":"if (FALSE) { # \\dontrun{ ## Delete the previously loaded CMU Pronouncing Dictionary lexicon deleteLexicon(labbcat.url, \"cmudict\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteMedia.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a transcript's media file — deleteMedia","title":"Delete a transcript's media file — deleteMedia","text":"function deletes given media file associated given transcript.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteMedia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a transcript's media file — deleteMedia","text":"","code":"deleteMedia(labbcat.url, id, file.name)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteMedia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a transcript's media file — deleteMedia","text":"labbcat.url URL LaBB-CAT instance id ID transcript whose media deleted. file.name media file name, e.g. media.file$name","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteMedia.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a transcript's media file — deleteMedia","text":"function work, credentials used connect server must least 'edit' access.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteMedia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a transcript's media file — deleteMedia","text":"","code":"if (FALSE) { # \\dontrun{ ## delete the mp3 file of a transcript from the server deleteMedia(labbcat.url, \"my-transcript.eaf\", \"my-transcript.mp3\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteParticipant.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes a participant record — deleteParticipant","title":"Deletes a participant record — deleteParticipant","text":"function deletes identified participant corpus, appear transcripts.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteParticipant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletes a participant record — deleteParticipant","text":"","code":"deleteParticipant(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteParticipant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deletes a participant record — deleteParticipant","text":"labbcat.url URL LaBB-CAT instance id participant ID - either unique internal database ID, name.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteParticipant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletes a participant record — deleteParticipant","text":"TRUE participant's record delete, FALSE otherwise.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteParticipant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deletes a participant record — deleteParticipant","text":"","code":"if (FALSE) { # \\dontrun{ ## Create a new participant record saveParticipant(labbcat.url, \"Juan Perez\")  ### Delete the participant we just created deleteParticipant(labbcat.url, \"Juan Perez\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteTranscript.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a transcript from the corpus — deleteTranscript","title":"Delete a transcript from the corpus — deleteTranscript","text":"function deletes given transcript, associated files.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteTranscript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a transcript from the corpus — deleteTranscript","text":"","code":"deleteTranscript(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteTranscript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a transcript from the corpus — deleteTranscript","text":"labbcat.url URL LaBB-CAT instance id ID transcript delete.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteTranscript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a transcript from the corpus — deleteTranscript","text":"ID deleted transcript","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteTranscript.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a transcript from the corpus — deleteTranscript","text":"function work, credentials used connect server must least 'edit' access.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/deleteTranscript.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a transcript from the corpus — deleteTranscript","text":"","code":"if (FALSE) { # \\dontrun{ ## delete a transcript from the server deleteTranscript(labbcat.url, \"my-transcript.eaf\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a query expression for matching a single-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValue","title":"Generates a query expression for matching a single-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValue","text":"function generates query expression fragment can passed transcript.expression participant.expression parameter getMatches, (expression parameter getMatchingTranscriptIds getMatchingParticipantIds) using list possible values given attribute.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a query expression for matching a single-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValue","text":"","code":"expressionFromAttributeValue(transcript.attribute, values, not = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a query expression for matching a single-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValue","text":"transcript.attribute transcript attribute filter . values list possible values transcript.attribute. Whether match given IDs (FALSE), everything except given IDs.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a query expression for matching a single-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValue","text":"transcript query expression can passed transcript.expression parameter getMatches expression parameter getMatchingTranscriptIds","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a query expression for matching a single-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValue","text":"attribute defined transcript.attribute expected exactly one value. may multiple values, use expressionFromAttributeValues instead.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a query expression for matching a single-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValue","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search languages <- c(\"en\",\"en-NZ\") results <- getMatches(labbcat.url, list(segment=\"I\"),                       transcript.expression = expressionFromAttributeValue(                             \"transcript_language\", languages)) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a query expression for matching a multi-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValues","title":"Generates a query expression for matching a multi-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValues","text":"function generates query expression fragment can passed transcript.expression participant.expression parameter getMatches, (expression parameter getMatchingTranscriptIds getMatchingParticipantIds) using list possible values given transcript attribute.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a query expression for matching a multi-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValues","text":"","code":"expressionFromAttributeValues(transcript.attribute, values, not = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a query expression for matching a multi-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValues","text":"transcript.attribute transcript attribute filter . values list possible values transcript.attribute. Whether match given IDs (FALSE), everything except given IDs.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a query expression for matching a multi-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValues","text":"transcript query expression can passed transcript.expression parameter getMatches expression parameter getMatchingTranscriptIds","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a query expression for matching a multi-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValues","text":"attribute defined transcript.attribute expected possibly one value. can one value, use expressionFromAttributeValue instead.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a query expression for matching a multi-value transcript/participant attribute, for use with getMatches — expressionFromAttributeValues","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search languages <- c(\"en\",\"es\") results <- getMatches(labbcat.url, list(segment=\"I\"),                       participant.expression = expressionFromAttributeValues(                             \"participant_languagesSpoken\", languages)) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValuesCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a query expression for matching a transcript/participant attribute, for use with getMatches — expressionFromAttributeValuesCount","title":"Generates a query expression for matching a transcript/participant attribute, for use with getMatches — expressionFromAttributeValuesCount","text":"function generates query expression fragment can passed transcript.expression participant.expression parameter getMatches, (expression parameter getMatchingTranscriptIds getMatchingParticipantIds) matching number values given attribute.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValuesCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a query expression for matching a transcript/participant attribute, for use with getMatches — expressionFromAttributeValuesCount","text":"","code":"expressionFromAttributeValuesCount(   transcript.attribute,   comparison = \"==\",   count )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValuesCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a query expression for matching a transcript/participant attribute, for use with getMatches — expressionFromAttributeValuesCount","text":"transcript.attribute transcript attribute filter . comparison string representing operator use comparison, one \"<\", \"<=\", \"==\", \"!=\", \">=\", \">\". count number compare count values .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValuesCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a query expression for matching a transcript/participant attribute, for use with getMatches — expressionFromAttributeValuesCount","text":"transcript query expression can passed transcript.expression parameter getMatches expression parameter getMatchingTranscriptIds","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValuesCount.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a query expression for matching a transcript/participant attribute, for use with getMatches — expressionFromAttributeValuesCount","text":"attribute defined transcript.attribute expected possibly one value, although single-value attributes may 0 1 values, function can used distinguish two possibilities well.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromAttributeValuesCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a query expression for matching a transcript/participant attribute, for use with getMatches — expressionFromAttributeValuesCount","text":"","code":"if (FALSE) { # \\dontrun{ ## Search only transcripts including multilingual participants results <- getMatches(labbcat.url, list(segment=\"I\"),                       participant.expression = expressionFromAttributeValuesCount(                             \"participant_languages\", \">=\", 2))  ## Search only transcripts with no restrictions specified results <- getMatches(labbcat.url, list(segment=\"I\"),                       transcript.expression = expressionFromAttributeValuesCount(                             \"transcript_restrictions\", \"==\", 0)) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a query expression for matching transcripts or participants by ID, for use with getMatches — expressionFromIds","title":"Generates a query expression for matching transcripts or participants by ID, for use with getMatches — expressionFromIds","text":"function generates query expression fragment can passed transcript.expression participant.expression parameter getMatches, using list corresponding IDs.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a query expression for matching transcripts or participants by ID, for use with getMatches — expressionFromIds","text":"","code":"expressionFromIds(ids, not = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a query expression for matching transcripts or participants by ID, for use with getMatches — expressionFromIds","text":"ids list IDs. Whether match given IDs (FALSE), everything except given IDs.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a query expression for matching transcripts or participants by ID, for use with getMatches — expressionFromIds","text":"query expression can passed transcript.expression participant.expression parameter getMatches expression parameter getMatchingTranscriptIds getMatchingParticipantIds","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a query expression for matching transcripts or participants by ID, for use with getMatches — expressionFromIds","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search transcript.ids <- c(\"AP511_MikeThorpe.eaf\", \"BR2044_OllyOhlson.eaf\") results <- getMatches(labbcat.url, list(segment=\"I\"),                       transcript.expression = expressionFromIds(transcript.ids)) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromTranscriptTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a transcript query expression for matching transcripts by type, for use with getMatches or getMatchingTranscriptIds — expressionFromTranscriptTypes","title":"Generates a transcript query expression for matching transcripts by type, for use with getMatches or getMatchingTranscriptIds — expressionFromTranscriptTypes","text":"function generates transcript query expression fragment can passed transcript.expression parameter getMatches, (expression parameter getMatchingTranscriptIds) order identify transcripts using list transcript types.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromTranscriptTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a transcript query expression for matching transcripts by type, for use with getMatches or getMatchingTranscriptIds — expressionFromTranscriptTypes","text":"","code":"expressionFromTranscriptTypes(transcript.types, not = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromTranscriptTypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a transcript query expression for matching transcripts by type, for use with getMatches or getMatchingTranscriptIds — expressionFromTranscriptTypes","text":"transcript.types list transcript types. Whether match given IDs (FALSE), everything except given IDs.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromTranscriptTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a transcript query expression for matching transcripts by type, for use with getMatches or getMatchingTranscriptIds — expressionFromTranscriptTypes","text":"transcript query expression can passed transcript.expression parameter getMatches expression parameter getMatchingTranscriptIds","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/expressionFromTranscriptTypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a transcript query expression for matching transcripts by type, for use with getMatches or getMatchingTranscriptIds — expressionFromTranscriptTypes","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search of interviews or monologues transcript.types <- c(\"interview\",\"monologue\") results <- getMatches(labbcat.url, list(segment=\"I\"),   transcript.expression = expressionFromTranscriptTypes(transcript.types))  ## Perform a search of all transcripts that aren't word-lists. results <- getMatches(labbcat.url, list(segment=\"I\"),   transcript.expression = expressionFromTranscriptTypes(\"wordlist\", NOT=true)) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/formatTranscript.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets transcript(s) in a given format — formatTranscript","title":"Gets transcript(s) in a given format — formatTranscript","text":"function gets whole transcripts 'LaBB-CAT', converted given format (default, Praat TextGrid).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/formatTranscript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets transcript(s) in a given format — formatTranscript","text":"","code":"formatTranscript(   labbcat.url,   id,   layer.ids,   mime.type = \"text/praat-textgrid\",   path = \"\" )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/formatTranscript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets transcript(s) in a given format — formatTranscript","text":"labbcat.url URL LaBB-CAT instance id transcript ID (transcript name) sound recording, vector transcript IDs. ID appears one, formatted file downloaded . layer.ids vector layer IDs. mime.type Optional content-type - \"text/praat-textgrid\" default, LaBB-CAT installation may support formats, can discovered using getSerializerDescriptors. path Optional path directory files saved.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/formatTranscript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets transcript(s) in a given format — formatTranscript","text":"name file, saved current directory, given path, list names files, multiple id's specified. list files returned, order returned server, order specified id list.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/formatTranscript.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets transcript(s) in a given format — formatTranscript","text":"NB Although many formats generate exactly one file interval (e.g. mime.type=text/praat-textgrid), guaranted; formats generate single file fixed collection files regardless many IDs .","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/formatTranscript.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets transcript(s) in a given format — formatTranscript","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the TextGrid of a recording textgrid.file <- formatTranscript(labbcat.url, \"AP2505_Nelson.eaf\",     c(\"word\", \"segment\"), path=\"textgrids\")   ## Get all the transcripts of a given participant transcript.ids <- getTranscriptIdsWithParticipant(labbcat.url, \"AP2505_Nelson\")  ## Download all the TextGrids, including the utterances, transcript, and segment layers textgrid.files <- formatTranscript(     labbcat.url, transcript.ids, c(\"utterance\", \"word\", \"segment\"))  } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentAudio.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets sound fragments from 'LaBB-CAT'. — fragmentAudio","title":"Gets sound fragments from 'LaBB-CAT'. — fragmentAudio","text":"version getSoundFragments can dataframe matches piped .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentAudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets sound fragments from 'LaBB-CAT'. — fragmentAudio","text":"","code":"fragmentAudio(   matches,   sample.rate = NULL,   path = \"\",   no.progress = FALSE,   start.column = Line,   end.column = LineEnd,   labbcat.url = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentAudio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets sound fragments from 'LaBB-CAT'. — fragmentAudio","text":"matches dataframe returned getMatches getAllUtterances, identifying results acoustic measurments appended. sample.rate Optional sample rate Hz - positive integer, result mono file given sample rate. path Optional path directory files saved. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive(). start.column column matches containing start time seconds. end.column column matches containing end time seconds. labbcat.url URL LaBB-CAT instance (instead inferring matches).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentAudio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets sound fragments from 'LaBB-CAT'. — fragmentAudio","text":"matches acoustic measurements appended new columns.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentAudio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets sound fragments from 'LaBB-CAT'. — fragmentAudio","text":"gets fragments audio LaBB-CAT, wav files.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentAudio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets sound fragments from 'LaBB-CAT'. — fragmentAudio","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all tokens of \"the\" the.tokens <- getMatches(labbcat.url, \"the\") ## Get a 22kHz sample rate wav file for each matched utterance the.wavs <- the.tokens |> fragmentTranscripts(sample.rate = 22050) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentData.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets binary annotation data in fragments. — fragmentData","title":"Gets binary annotation data in fragments. — fragmentData","text":"version getFragmentAnnotationData can dataframe matches piped .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets binary annotation data in fragments. — fragmentData","text":"","code":"fragmentData(   matches,   layer.id,   path = \"\",   no.progress = FALSE,   start.column = Line,   end.column = LineEnd,   labbcat.url = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets binary annotation data in fragments. — fragmentData","text":"matches dataframe returned getMatches getAllUtterances, identifying results acoustic measurments appended. layer.id ID MIME-typed layer. path Optional path directory files saved. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive(). start.column column matches containing start time seconds. end.column column matches containing end time seconds. labbcat.url URL LaBB-CAT instance (instead inferring matches).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets binary annotation data in fragments. — fragmentData","text":"matches acoustic measurements appended new columns.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets binary annotation data in fragments. — fragmentData","text":"annotation layers, annotations textual label, also binary data associated ; e.g. image data file. cases, 'type' layer MIME type, e.g. 'image/png'. function gets annotations given start/end times given MIME-typed layer, retrieves binary data files, whose names returned function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets binary annotation data in fragments. — fragmentData","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all tokens of \"vivid\" vivid.tokens <- getMatches(labbcat.url, \"vivid\") ## Get mediapipe image annotations for during the tokens vivid.faces <- vivid.tokens |>     fragmentData(         \"mediapipe\", path = \"png\",         start.column=Target.word.start, end.column=Target.word.end) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets annotations in fragments. — fragmentLabels","title":"Gets annotations in fragments. — fragmentLabels","text":"version getFragmentAnnotations can dataframe matches piped .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets annotations in fragments. — fragmentLabels","text":"","code":"fragmentLabels(   matches,   layer.ids,   sep = \" \",   partial.containment = FALSE,   no.progress = FALSE,   start.column = Line,   end.column = LineEnd,   labbcat.url = NULL,   column.prefix = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets annotations in fragments. — fragmentLabels","text":"matches dataframe returned getMatches getAllUtterances, identifying results acoustic measurments appended. layer.ids vector layer IDs. sep separator use concatenating labels multiple annotations given interval. partial.containment Whether include annotations partially contained given interval. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive(). start.column column matches containing start time seconds. end.column column matches containing end time seconds. labbcat.url URL LaBB-CAT instance (instead inferring matches). column.prefix string prefix new column name .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets annotations in fragments. — fragmentLabels","text":"matches acoustic measurements appended new columns.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentLabels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets annotations in fragments. — fragmentLabels","text":"gets annotations given start/end times given layers. one annotation matches, labels concatentated together.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentLabels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets annotations in fragments. — fragmentLabels","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all tokens of /I/ results <- getMatches(labbcat.url, list(topic = \".*quake.*\")) |>     fragmentLabels( ## concatenate labels of words between topic.start and topic.end        c(\"word\"), start.column=topic.start, end.column=topic.end) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentTranscripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets transcript fragments in a given format. — fragmentTranscripts","title":"Gets transcript fragments in a given format. — fragmentTranscripts","text":"version getFragments can dataframe matches piped .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentTranscripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets transcript fragments in a given format. — fragmentTranscripts","text":"","code":"fragmentTranscripts(   matches,   layer.ids,   mime.type = \"text/praat-textgrid\",   path = \"\",   start.column = Line,   end.column = LineEnd,   labbcat.url = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentTranscripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets transcript fragments in a given format. — fragmentTranscripts","text":"matches dataframe returned getMatches getAllUtterances, identifying results acoustic measurments appended. layer.ids vector layer IDs. mime.type Optional content-type - \"text/praat-textgrid\" default, LaBB-CAT installation may support formats, can discovered using getSerializerDescriptors. path Optional path directory files saved. start.column column matches containing start time seconds. end.column column matches containing end time seconds. labbcat.url URL LaBB-CAT instance (instead inferring matches).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentTranscripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets transcript fragments in a given format. — fragmentTranscripts","text":"matches acoustic measurements appended new columns.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentTranscripts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets transcript fragments in a given format. — fragmentTranscripts","text":"gets fragments transcripts LaBB-CAT, converted given file format (default, Praat TextGrid). NB Although many formats generate exactly one file interval (e.g. mime.type=text/praat-textgrid), guaranteed; formats generate single file fixed collection files regardless many fragments .","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/fragmentTranscripts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets transcript fragments in a given format. — fragmentTranscripts","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all tokens of \"the\" the.tokens <- getMatches(labbcat.url, \"the\") ## Get a TextGrid for each matched utterance, including word and segment intervals the.textgrids <- the.tokens |> fragmentTranscripts(c(\"utterance\", \"word\", \"segment\")) ## Get a CSV for the same utterances the.textgrids <- the.tokens |> fragmentTranscripts(     c(\"utterance\", \"word\", \"segment\"), mime.type = \"text/csv\", path=\"csv\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a layer — generateLayer","title":"Generates a layer — generateLayer","text":"Generates annotations given layer transcripts corpus.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a layer — generateLayer","text":"","code":"generateLayer(labbcat.url, layer.id, no.progress = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a layer — generateLayer","text":"labbcat.url URL LaBB-CAT instance layer.id ID layer generate. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a layer — generateLayer","text":"final status layer generation task.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a layer — generateLayer","text":"","code":"if (FALSE) { # \\dontrun{ ## Generate all phonemic transcription annotations generateLayer(labbcat.url, \"phonemes\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayerUtterances.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a layer for a given set of utterances — generateLayerUtterances","title":"Generates a layer for a given set of utterances — generateLayerUtterances","text":"Generates annotations given layer given set utterances, e.g. force-align selected utterances participant.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayerUtterances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a layer for a given set of utterances — generateLayerUtterances","text":"","code":"generateLayerUtterances(   labbcat.url,   match.ids,   layer.id,   collection.name = NULL,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayerUtterances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a layer for a given set of utterances — generateLayerUtterances","text":"labbcat.url URL LaBB-CAT instance match.ids vector annotation IDs, e.g. MatchId column, URL column, results set. layer.id ID layer generate. collection.name optional name collection, e.g. participant ID. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayerUtterances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a layer for a given set of utterances — generateLayerUtterances","text":"final status layer generation task.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/generateLayerUtterances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a layer for a given set of utterances — generateLayerUtterances","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all utterances of a participant allUtterances <- getAllUtterances(labbcat.url, \"AP2505_Nelson\")  ## Force-align the participant's utterances generateLayerUtterances(labbcat.url, allUtterances$MatchId, \"htk\", \"AP2505_Nelson\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAllUtterances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all utterances of participants — getAllUtterances","title":"Get all utterances of participants — getAllUtterances","text":"Identifies utterances given set participants.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAllUtterances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all utterances of participants — getAllUtterances","text":"","code":"getAllUtterances(   labbcat.url,   participant.ids,   transcript.types = NULL,   main.participant = TRUE,   max.matches = NULL,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAllUtterances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all utterances of participants — getAllUtterances","text":"labbcat.url URL LaBB-CAT instance participant.ids list participant IDs identify utterances . transcript.types optional list transcript types limit results . null, transcript types searched. main.participant TRUE search main-participant utterances, FALSE search utterances. max.matches maximum number matches return, null return . .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAllUtterances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all utterances of participants — getAllUtterances","text":"data frame identifying matches, containing following columns: SearchName name based pattern – rows Number Row number Transcript Name transcript match found Line start offset utterance/line LineEnd end offset utterance/line MatchId unique ID matching target token .Match Transcript text immediately match Text Transcript text match .Match Transcript text immediately match Target.word Text target word token Target.word.start Start offset target word token Target.word.end End offset target word token Target.segment Label target segment (present segment layer included pattern) Target.segment.start Start offset target segment (present segment layer included pattern) Target.segment.end End offset target segment (present segment layer included pattern)","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAllUtterances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all utterances of participants — getAllUtterances","text":"","code":"if (FALSE) { # \\dontrun{ ## get all utterances of the given participants participant.ids <- getParticipantIds(labbcat.url)[1:3] results <- getAllUtterances(labbcat.url, participant.ids)  ## results$MatchId can be used to access results } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnchors.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the given anchors in the given transcript — getAnchors","title":"Gets the given anchors in the given transcript — getAnchors","text":"Lists given anchors given transcript.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnchors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the given anchors in the given transcript — getAnchors","text":"","code":"getAnchors(labbcat.url, id, anchor.id, page.length = 1000)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnchors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the given anchors in the given transcript — getAnchors","text":"labbcat.url URL LaBB-CAT instance id transcript ID (.e. transcript name) anchor.id vector anchor IDs (string representing one anchor ID) page.length order prevent timeouts large number matches network connection slow, rather retrieving anchors one big request, retrieved using many smaller requests. parameter controls number anchors retrieved per request.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnchors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the given anchors in the given transcript — getAnchors","text":"named list anchors, members: id annotation's unique ID, offset offset beginning (seconds transcript recording, characters text document) confidence rating 0-100 confidence offset, e.g. 10: default value, 50: force-aligned, 100: manually aligned","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnchors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the given anchors in the given transcript — getAnchors","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the first 20 orthography tokens in UC427_ViktoriaPapp_A_ENG.eaf orthography <- getAnnotations(labbcat.url, \"UC427_ViktoriaPapp_A_ENG.eaf\", \"orthography\", 20, 0)  ## Get the start anchors for the above tokens word.starts <- getAnchors(labbcat.url, \"UC427_ViktoriaPapp_A_ENG.eaf\", orthography$startId) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the annotations on the given layer of the given transcript — getAnnotations","title":"Gets the annotations on the given layer of the given transcript — getAnnotations","text":"Returns annotations given layer given transcript.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the annotations on the given layer of the given transcript — getAnnotations","text":"","code":"getAnnotations(   labbcat.url,   id,   layer.id,   max.ordinal = NULL,   page.length = NULL,   page.number = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the annotations on the given layer of the given transcript — getAnnotations","text":"labbcat.url URL LaBB-CAT instance id transcript ID (.e. transcript name) layer.id layer ID max.ordinal maximum ordinal returned annotations. e.g. max.ordinal 1 ensure first annotation parent returned. max.ordinal null, annotations returned, regardless ordinal. page.length maximum number annotations return, null return page.number zero-based page number return, null return first page","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the annotations on the given layer of the given transcript — getAnnotations","text":"named list annotations, members: id annotation's unique ID layerId name layer comes label value annotation startId ID start anchor, endId ID end anchor, parentId ID parent annotation, ordinal ordinal annotation among peers, confidence rating 0-100 confidence label e.g. 10: default value, 50: automatically generated, 100: manually annotated","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the annotations on the given layer of the given transcript — getAnnotations","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all the orthography tokens in UC427_ViktoriaPapp_A_ENG.eaf orthography <- getAnnotations(labbcat.url, \"UC427_ViktoriaPapp_A_ENG.eaf\", \"orthography\")  ## Get the first 20 orthography tokens in UC427_ViktoriaPapp_A_ENG.eaf orthography <- getAnnotations(labbcat.url, \"UC427_ViktoriaPapp_A_ENG.eaf\", \"orthography\", 20, 0) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotatorDescriptor.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets annotator information — getAnnotatorDescriptor","title":"Gets annotator information — getAnnotatorDescriptor","text":"Retrieve information annotator. Annotators modules perform different annotation tasks. function provides information given annotator, example currently installed version module, configuration parameters requires, etc.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotatorDescriptor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets annotator information — getAnnotatorDescriptor","text":"","code":"getAnnotatorDescriptor(labbcat.url, annotator.id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotatorDescriptor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets annotator information — getAnnotatorDescriptor","text":"labbcat.url URL LaBB-CAT instance. annotator.id ID annotator module.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotatorDescriptor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets annotator information — getAnnotatorDescriptor","text":"annotator info: annotatorId annotators's unique ID version currently install version annotator. info HTML-encoded description function annotator. infoText plain text version $info (converted automatically). hasConfigWebapp Determines whether annotator includes web-app installation general configuration. configParameterInfo HTML-encoded definition installation config parameters, including list parameters, encoding parameter string. configParameterInfoText plain text version $configParameterInfo (converted automatically). hasTaskWebapp Determines whether annotator includes web-app task parameter configuration. taskParameterInfo HTML-encoded definition task parameters, including list parameters, encoding parameter string. taskParameterInfoText plain text version $taskParameterInfo (converted automatically). hasExtWebapp Determines whether annotator includes extras web-app implements functionality providing extra data extending functionality annotator-specific way. extApiInfo HTML-encoded document containing information endpoints published ext web-app. extApiInfoText plain text version $extApiInfo (converted automatically).","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAnnotatorDescriptor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets annotator information — getAnnotatorDescriptor","text":"","code":"if (FALSE) { # \\dontrun{ ## Get information about the BAS Annotator basAnnotator <- getAnnotatorDescriptor(\"https://labbcat.canterbury.ac.nz/demo/\", \"BASAnnotator\") cat(basAnnotator$infoText) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAvailableMedia.html","id":null,"dir":"Reference","previous_headings":"","what":"List the media available for the given transcript — getAvailableMedia","title":"List the media available for the given transcript — getAvailableMedia","text":"List media available given transcript","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAvailableMedia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the media available for the given transcript — getAvailableMedia","text":"","code":"getAvailableMedia(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAvailableMedia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the media available for the given transcript — getAvailableMedia","text":"labbcat.url URL LaBB-CAT instance id transcript ID (.e. transcript name)","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAvailableMedia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the media available for the given transcript — getAvailableMedia","text":"named list media files available given transcript, members: trackSuffix track suffix media mimeType MIME type file url URL content file name Name file","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getAvailableMedia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the media available for the given transcript — getAvailableMedia","text":"","code":"if (FALSE) { # \\dontrun{ ## List the media files available for BR2044_OllyOhlson.eaf media <- getAvailableMedia(labbcat.url, \"BR2044_OllyOhlson.eaf\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getCorpusIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of corpus IDs — getCorpusIds","title":"Gets a list of corpus IDs — getCorpusIds","text":"Returns list corpora given 'LaBB-CAT' instance.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getCorpusIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of corpus IDs — getCorpusIds","text":"","code":"getCorpusIds(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getCorpusIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of corpus IDs — getCorpusIds","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getCorpusIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of corpus IDs — getCorpusIds","text":"list corpus IDs","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getCorpusIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of corpus IDs — getCorpusIds","text":"","code":"if (FALSE) { # \\dontrun{ ## List corpora corpora <- getCorpusIds(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDeserializerDescriptors.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists the descriptors of all registered deserializers — getDeserializerDescriptors","title":"Lists the descriptors of all registered deserializers — getDeserializerDescriptors","text":"Returns list deserializers, modules import transcriptions annotation structures specific file format, e.g. Praat TextGrid, plain text, etc.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDeserializerDescriptors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists the descriptors of all registered deserializers — getDeserializerDescriptors","text":"","code":"getDeserializerDescriptors(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDeserializerDescriptors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lists the descriptors of all registered deserializers — getDeserializerDescriptors","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDeserializerDescriptors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists the descriptors of all registered deserializers — getDeserializerDescriptors","text":"list serializers, including following information: name name format. version installed version serializer module. fileSuffixes normal file name suffixes (extensions) files. mimeType MIME type format, .e. value use mimeType parameter getFragments","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDeserializerDescriptors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lists the descriptors of all registered deserializers — getDeserializerDescriptors","text":"","code":"if (FALSE) { # \\dontrun{ ## List file upload formats supported formats <- getDeserializerDescriptors(\"https://labbcat.canterbury.ac.nz/demo/\")  ## can we upload as plain text? plainTextSupported <- \"text/plain\" %in% formats$mimeType } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaries.html","id":null,"dir":"Reference","previous_headings":"","what":"List the dictionaries available — getDictionaries","title":"List the dictionaries available — getDictionaries","text":"List dictionaries available","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the dictionaries available — getDictionaries","text":"","code":"getDictionaries(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the dictionaries available — getDictionaries","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the dictionaries available — getDictionaries","text":"named list layer manager IDs, containing list dictionaries layer manager makes available.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the dictionaries available — getDictionaries","text":"","code":"if (FALSE) { # \\dontrun{ ## List the dictionaries available dictionaries <- getDictionaries(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaryEntries.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup entries in a dictionary — getDictionaryEntries","title":"Lookup entries in a dictionary — getDictionaryEntries","text":"Lookup entries dictionary","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaryEntries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup entries in a dictionary — getDictionaryEntries","text":"","code":"getDictionaryEntries(labbcat.url, manager.id, dictionary.id, keys)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaryEntries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup entries in a dictionary — getDictionaryEntries","text":"labbcat.url URL LaBB-CAT instance manager.id layer manager ID dictionary, returned getDictionaries dictionary.id ID dictionary, returned getDictionaries keys list keys (words) identifying entries look ","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaryEntries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup entries in a dictionary — getDictionaryEntries","text":"data frame keys dictionary entries, .","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getDictionaryEntries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup entries in a dictionary — getDictionaryEntries","text":"","code":"if (FALSE) { # \\dontrun{ keys <- c(\"the\", \"quick\", \"brown\", \"fox\")  ## get the pronunciations according to CELEX entries <- getDictionaryEntries(labbcat.url, \"CELEX-EN\", \"Phonology (wordform)\", keys) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotationData.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets binary annotation data in fragments. — getFragmentAnnotationData","title":"Gets binary annotation data in fragments. — getFragmentAnnotationData","text":"annotation layers, annotations textual label, also binary data associated ; e.g. image data file. cases, 'type' layer MIME type, e.g. 'image/png'. function gets annotations given start/end times given MIME-typed layer, retrieves binary data files, whose names returned function.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotationData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets binary annotation data in fragments. — getFragmentAnnotationData","text":"","code":"getFragmentAnnotationData(   labbcat.url,   transcript.id,   start,   end,   layer.id,   path = \"\",   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotationData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets binary annotation data in fragments. — getFragmentAnnotationData","text":"labbcat.url URL LaBB-CAT instance transcript.id transcript ID (transcript name) sound recording, vector transcript IDs. start start time seconds, vector start times. end end time seconds, vector end times. layer.id ID MIME-typed layer. path Optional path directory files saved. .progress TRUE supress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotationData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets binary annotation data in fragments. — getFragmentAnnotationData","text":"names files.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotationData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets binary annotation data in fragments. — getFragmentAnnotationData","text":"","code":"if (FALSE) { # \\dontrun{ ## Get mediapipe image annotations for the eleventh second of a transcript png.files <- getFragmentAnnotationData(     labbcat.url, c(\"AP511_MikeThorpe.eaf\"), c(10), c(11), c(\"mediapipe\"), path = \"png\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets annotations in fragments. — getFragmentAnnotations","title":"Gets annotations in fragments. — getFragmentAnnotations","text":"function gets annotations given start/end times given layers. one annotation matches, labels concatentated together.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets annotations in fragments. — getFragmentAnnotations","text":"","code":"getFragmentAnnotations(   labbcat.url,   transcript.id,   participant.id,   start,   end,   layer.ids,   sep = \" \",   partial.containment = FALSE,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets annotations in fragments. — getFragmentAnnotations","text":"labbcat.url URL LaBB-CAT instance transcript.id transcript ID (transcript name) sound recording, vector transcript IDs. participant.id participant ID annotations, vector participant IDs. start start time seconds, vector start times. end end time seconds, vector end times. layer.ids vector layer IDs. sep separator use concatenating labels multiple annotations given interval. partial.containment Whether include annotations partially contained given interval. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets annotations in fragments. — getFragmentAnnotations","text":"data frame three columns layer layer.ids: annotation labels concatenated together start time first annotation end time last annotation","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragmentAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets annotations in fragments. — getFragmentAnnotations","text":"","code":"if (FALSE) { # \\dontrun{ ## Get some span-layer intervales topics <- getMatches(labbcat.url, list(topic = \".*quake.*\"))  ## Get concantenated word tokens for each topic annotation topic.tokens <- getFragmentAnnotations(     labbcat.url, topics$Transcript, topics$Participant, topics$topic.start, topics$topic.end,     c(\"word\")) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets transcript fragments in a given format. — getFragments","title":"Gets transcript fragments in a given format. — getFragments","text":"function gets fragments transcripts LaBB-CAT, converted given file format (default, Praat TextGrid).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets transcript fragments in a given format. — getFragments","text":"","code":"getFragments(   labbcat.url,   id,   start,   end,   layer.ids,   mime.type = \"text/praat-textgrid\",   path = \"\" )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets transcript fragments in a given format. — getFragments","text":"labbcat.url URL LaBB-CAT instance id transcript ID (transcript name) sound recording, vector transcript IDs. start start time seconds, vector start times. end end time seconds, vector end times. layer.ids vector layer IDs. mime.type Optional content-type - \"text/praat-textgrid\" default, LaBB-CAT installation may support formats, can discovered using getSerializerDescriptors. path Optional path directory files saved.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets transcript fragments in a given format. — getFragments","text":"name file, saved current directory, list names files, multiple id's/start's/end's specified list files returned, order returned server, order specified id/start/end lists.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets transcript fragments in a given format. — getFragments","text":"NB Although many formats generate exactly one file interval (e.g. mime.type=text/praat-textgrid), guaranteed; formats generate single file fixed collection files regardless many fragments .","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getFragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets transcript fragments in a given format. — getFragments","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the 5 seconds starting from 10s after the beginning of a recording textgrid.file <- getFragments(labbcat.url, \"AP2505_Nelson.eaf\", 10.0, 15.0,     c(\"transcript\", \"phonemes\"), path=\"samples\")   ## Load some search results previously exported from LaBB-CAT results <- read.csv(\"results.csv\", header=T)  ## Get a list of fragment TextGrids, including the utterances, transcript, and phonemes layers textgrid.files <- getFragments(     labbcat.url, results$Transcript, results$Line, results$LineEnd,     c(\"utterance\", \"word\", \"phonemes\"))  ## Get a list of fragment TextGrids textgrid.files <- getFragments(     labbcat.url, results$Transcript, results$Line, results$LineEnd) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated synonym for getTranscriptIds. — getGraphIds","title":"Deprecated synonym for getTranscriptIds. — getGraphIds","text":"Returns list graph IDs (.e. transcript names).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated synonym for getTranscriptIds. — getGraphIds","text":"","code":"getGraphIds(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated synonym for getTranscriptIds. — getGraphIds","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated synonym for getTranscriptIds. — getGraphIds","text":"list graph IDs","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated synonym for getTranscriptIds. — getGraphIds","text":"","code":"if (FALSE) { # \\dontrun{ ## List all transcripts transcripts <- getGraphIds(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsInCorpus.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated synonym for getTranscriptIdsInCorpus. — getGraphIdsInCorpus","title":"Deprecated synonym for getTranscriptIdsInCorpus. — getGraphIdsInCorpus","text":"Returns list corpora given 'LaBB-CAT' instance.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsInCorpus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated synonym for getTranscriptIdsInCorpus. — getGraphIdsInCorpus","text":"","code":"getGraphIdsInCorpus(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsInCorpus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated synonym for getTranscriptIdsInCorpus. — getGraphIdsInCorpus","text":"labbcat.url URL LaBB-CAT instance id ID (name) corpus","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsInCorpus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated synonym for getTranscriptIdsInCorpus. — getGraphIdsInCorpus","text":"list corpus IDs","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsInCorpus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated synonym for getTranscriptIdsInCorpus. — getGraphIdsInCorpus","text":"","code":"if (FALSE) { # \\dontrun{ ## List transcripts in the QB corpus transcripts <- getGraphIdsInCorpus(\"https://labbcat.canterbury.ac.nz/demo/\", \"QB\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsWithParticipant.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated synonym for getTranscriptIdsWithParticipant. — getGraphIdsWithParticipant","title":"Deprecated synonym for getTranscriptIdsWithParticipant. — getGraphIdsWithParticipant","text":"Returns list IDs graphs (.e. transcript names) include given participant.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsWithParticipant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated synonym for getTranscriptIdsWithParticipant. — getGraphIdsWithParticipant","text":"","code":"getGraphIdsWithParticipant(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsWithParticipant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated synonym for getTranscriptIdsWithParticipant. — getGraphIdsWithParticipant","text":"labbcat.url URL LaBB-CAT instance id participant ID","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsWithParticipant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated synonym for getTranscriptIdsWithParticipant. — getGraphIdsWithParticipant","text":"list graph IDs","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getGraphIdsWithParticipant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated synonym for getTranscriptIdsWithParticipant. — getGraphIdsWithParticipant","text":"","code":"if (FALSE) { # \\dontrun{ ## List transcripts in which UC427_ViktoriaPapp_A_ENG speaks transcripts <- getGraphIdsWithParticipant(labbcat.url, \"UC427_ViktoriaPapp_A_ENG\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getId.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the store's ID — getId","title":"Gets the store's ID — getId","text":"store's ID - .e. ID 'LaBB-CAT' instance.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the store's ID — getId","text":"","code":"getId(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the store's ID — getId","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the store's ID — getId","text":"annotation store's ID","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the store's ID — getId","text":"","code":"if (FALSE) { # \\dontrun{ ## Get ID of LaBB-CAT instance instance.id <- getId(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a layer definition — getLayer","title":"Gets a layer definition — getLayer","text":"Gets layer definition","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a layer definition — getLayer","text":"","code":"getLayer(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a layer definition — getLayer","text":"labbcat.url URL LaBB-CAT instance id ID layer get definition ","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a layer definition — getLayer","text":"definition given layer, members: id layer's unique ID parentId layer's parent layer ID description description layer alignment layer's alignment - 0 none, 1 point alignment, 2 interval alignment peers Whether children peers peersOverlap Whether child peers can overlap parentIncludes Whether parent t-includes child saturated Whether children must temporally fill entire parent duration (true) (false) parentIncludes Whether parent t-includes child type type labels layer validLabels List valid label values layer","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a layer definition — getLayer","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the definition of the orthography layer orthography.layer <- getLayer(\"https://labbcat.canterbury.ac.nz/demo/\", \"orthography\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayerIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of layer IDs — getLayerIds","title":"Gets a list of layer IDs — getLayerIds","text":"Layer IDs annotation 'types'.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayerIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of layer IDs — getLayerIds","text":"","code":"getLayerIds(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayerIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of layer IDs — getLayerIds","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayerIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of layer IDs — getLayerIds","text":"list layer IDs","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayerIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of layer IDs — getLayerIds","text":"","code":"if (FALSE) { # \\dontrun{ ## Get names of all layers layer.ids <- getLayerIds(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayers.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of layer definitions — getLayers","title":"Gets a list of layer definitions — getLayers","text":"Gets list layer definitions","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of layer definitions — getLayers","text":"","code":"getLayers(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of layer definitions — getLayers","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of layer definitions — getLayers","text":"list layer definitions, members: id layer's unique ID parentId layer's parent layer ID description description layer alignment layer's alignment - 0 none, 1 point alignment, 2 interval alignment peers Whether children peers peersOverlap Whether child peers can overlap parentIncludes Whether parent t-includes child saturated Whether children must temporally fill entire parent duration (true) (false) parentIncludes Whether parent t-includes child type type labels layer validLabels List valid label values layer","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getLayers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of layer definitions — getLayers","text":"","code":"if (FALSE) { # \\dontrun{ ## Get definitions of all layers layers <- getLayers(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchAlignments.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets temporal alignments of matches on a given layer — getMatchAlignments","title":"Gets temporal alignments of matches on a given layer — getMatchAlignments","text":"Gets labels start/end offsets annotations given layer, identified given match IDs.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchAlignments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets temporal alignments of matches on a given layer — getMatchAlignments","text":"","code":"getMatchAlignments(   labbcat.url,   match.ids,   layer.ids,   target.offset = 0,   annotations.per.layer = 1,   anchor.confidence.min = 50,   include.match.ids = FALSE,   page.length = 1000,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchAlignments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets temporal alignments of matches on a given layer — getMatchAlignments","text":"labbcat.url URL LaBB-CAT instance match.ids vector annotation IDs, e.g. MatchId column, URL column, results set. layer.ids vector layer IDs. target.offset distance original target match, e.g. 0 – find annotations match target 1 – find annotations token immediately match target -1 – find annotations token immediately match target annotations.per.layer number annotations given layer retrieve. cases, one annotation available. However, tokens may, example, annotated `possible phonemic transcriptions', case using value greater 1 parameter provides phonemic transcriptions, tokens one. anchor.confidence.min minimum confidence alignments, e.g. 0 – return alignments, regardless confidence; 50 – return alignments least automatically aligned; 100 – return manually-set alignments. include.match.ids Whether data frame returned includes original MatchId column . page.length order prevent timeouts large number matches network connection slow, rather retrieving matches one big request, retrieved using many smaller requests. parameter controls number results retrieved per request. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchAlignments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets temporal alignments of matches on a given layer — getMatchAlignments","text":"data frame label, start time, end time, layer.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchAlignments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets temporal alignments of matches on a given layer — getMatchAlignments","text":"can specify threshold confidence alignment, value 0 (aligned) 100 (manually aligned). default 50 (automatically aligned), alignments least automatically aligned specified. cases token alignment confidence falls threshold, label returned, start/end times NA.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchAlignments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets temporal alignments of matches on a given layer — getMatchAlignments","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search results <- getMatches(labbcat.url, list(segment=\"I\"))  ## Get the segment following the token, with alignment if it's been manually aligned following.segment <- getMatchAlignments(labbcat.url, results$MatchId, \"segment\",     target.offset=1, anchor.confidence.min=100) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets labels of annotations on a given layer, identified by given match IDs — getMatchLabels","title":"Gets labels of annotations on a given layer, identified by given match IDs — getMatchLabels","text":"Gets labels annotations given layer, identified given match IDs","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets labels of annotations on a given layer, identified by given match IDs — getMatchLabels","text":"","code":"getMatchLabels(   labbcat.url,   match.ids,   layer.ids,   target.offset = 0,   annotations.per.layer = 1,   include.match.ids = FALSE,   page.length = 1000,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets labels of annotations on a given layer, identified by given match IDs — getMatchLabels","text":"labbcat.url URL LaBB-CAT instance match.ids vector annotation IDs, e.g. MatchId column, URL column, results set. layer.ids vector layer IDs. target.offset distance original target match, e.g. 0 – find annotations match target 1 – find annotations token immediately match target -1 – find annotations token immediately match target annotations.per.layer number annotations given layer retrieve. cases, one annotation available. However, tokens may, example, annotated `possible phonemic transcriptions', case using value greater 1 parameter provides phonemic transcriptions, tokens one. include.match.ids Whether data frame returned includes original MatchId column . page.length order prevent timeouts large number matches network connection slow, rather retrieving matches one big request, retrieved using many smaller requests. parameter controls number results retrieved per request. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets labels of annotations on a given layer, identified by given match IDs — getMatchLabels","text":"data frame labels.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchLabels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets labels of annotations on a given layer, identified by given match IDs — getMatchLabels","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search results <- getMatches(labbcat.url, list(orthography=\"quake\"))  ## Get the topic annotations for the matches topics <- getMatchLabels(labbcat.url, results$MatchId, \"topic\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatches.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for tokens — getMatches","title":"Search for tokens — getMatches","text":"Searches transcripts tokens matching given pattern.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for tokens — getMatches","text":"","code":"getMatches(   labbcat.url,   pattern,   participant.expression = NULL,   transcript.expression = NULL,   main.participant = TRUE,   aligned = NULL,   matches.per.transcript = NULL,   words.context = 0,   max.matches = NULL,   overlap.threshold = NULL,   anchor.confidence.min = NULL,   page.length = 1000,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for tokens — getMatches","text":"labbcat.url URL LaBB-CAT instance pattern object representing pattern search . can : string, representing search orthography layer - spaces taken word boundaries single named list, representing one-column search - names taken layer IDs list named lists, representing multi-column search - outer list represents columns search matrix column 'immediately follows' previous, names inner lists taken layer IDs named list (segment layers, list named lists) fully replicating structure search matrix LaBB-CAT browser interface, one element called \"columns\", containing named list column. element \"columns\" named list contains element named \"layers\", whose value named list (list named lists) patterns match layer, optionally element named \"adj\", whose value number representing maximum distance, tokens, column next column - \"adj\" specified, value defaults 1, tokens contiguous. element \"layers\" named list named layer matches, value named list following possible elements: pattern  regular expression match label min  inclusive minimum numeric value label max  exclusive maximum numeric value label  TRUE negate match anchorStart  TRUE anchor start annotation layer (.e. matching word token first /start matching annotation layer) anchorEnd  TRUE anchor end annotation layer (.e. matching word token last /end matching annotation layer) target  TRUE make layer target search; results contain one row match target layer Examples valid pattern objects include:   participant.expression optional participant query expression identifying participants search utterances . output expressionFromIds, expressionFromAttributeValue, expressionFromAttributeValues, one concatentated together delimited ' && '. supplied, utterances participants searched. transcript.expression optional transript query expression identifying transcripts search . output expressionFromIds, expressionFromTranscriptTypes, expressionFromAttributeValue, expressionFromAttributeValues, one concatentated together delimited ' && '. supplied, transcripts searched. main.participant TRUE search main-participant utterances, FALSE search utterances. aligned parameter deprecated removed future versions; please use anchor.confidence.min = 50 instead. matches.per.transcript Optional maximum number matches per transcript return. NULL means matches. words.context Number words context include '.Match' '.Match' columns results. max.matches maximum number matches return, null return . overlap.threshold percentage overlap utterances simultaneous speech excluded, null include overlapping speech. anchor.confidence.min minimum confidence alignments, e.g. 0 - return alignments, regardless confidence; 50 - return alignments least automatically aligned; 100 - return manually-set alignments. page.length order prevent timeouts large number matches network connection slow, rather retrieving matches one big request, retrieved using many smaller requests. parameter controls number results retrieved per request. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":"## the word 'the' followed immediately by a word starting with an orthographic vowel pattern <- \"the [aeiou].*\"  ## a word spelt with \"k\" but pronounced \"n\" word initially pattern <- list(orthography = \"k.*\", phonemes = \"n.*\")  ## the word 'the' followed immediately by a word starting with a phonemic vowel pattern <- list(     list(orthography = \"the\"),     list(phonemes = \"[cCEFHiIPqQuUV0123456789~#\\\\$@].*\"))  ## the word 'the' followed immediately or with one intervening word by ## a hapax legomenon (word with a frequency of 1) that doesn't start with a vowel pattern <- list(columns = list(     list(layers = list(            orthography = list(pattern = \"the\")),          adj = 2),     list(layers = list(            phonemes = list(not = TRUE, pattern = \"[cCEFHiIPqQuUV0123456789~#\\\\$@].*\"),            frequency = list(max = \"2\")))))  ## words that contain the /I/ phone followed by the /l/ phone ## (multiple patterns per word currently only works for segment layers) pattern <- list(segment = list(\"I\", \"l\"))  ## words that contain the /I/ phone followed by the /l/ phone, targeting the /l/ segment ## (multiple patterns per word currently only works for segment layers) pattern <- list(segment = list(\"I\", list(pattern=\"l\", target=T)))  ## words where the spelling starts with \"k\", but the first segment is /n/ pattern <- list(   orthography = \"k.*\",   segment = list(pattern = \"n\", anchorStart = T)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for tokens — getMatches","text":"data frame identifying matches, containing following columns: Title title LaBB-CAT instance Version current version LaBB-CAT instance SearchName name based pattern – rows MatchId unique ID matching target token Transcript Name transcript match found Participant Name speaker Corpus corpus transcript Line start offset utterance/line LineEnd end offset utterance/line .Match Transcript text immediately match Text Transcript text match .Match Transcript text immediately match Number Row number URL URL first matching word token Target.word Text target word token Target.word.start Start offset target word token Target.word.end End offset target word token Target.segment Label target segment (present segment layer included pattern) Target.segment.start Start offset target segment (present segment layer included pattern) Target.segment.end End offset target segment (present segment layer included pattern)","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for tokens — getMatches","text":"","code":"if (FALSE) { # \\dontrun{ ## the word 'the' followed immediately by a word starting with an orthographic vowel theThenOrthVowel <- getMatches(labbcat.url, \"the [aeiou]\")  ## a word spelt with \"k\" but pronounced \"n\" word initially knWords <- getMatches(labbcat.url, list(orthography = \"k.*\", phonemes = \"n.*\"))  ## the word 'the' followed immediately by a word starting with an phonemic vowel theThenPhonVowel <- getMatches(   labbcat.url, list(     list(orthography = \"the\"),     list(phonemes = \"[cCEFHiIPqQuUV0123456789~#\\\\$@].*\")))  ## the word 'the' followed immediately or with one intervening word by ## a hapax legomenon (word with a frequency of 1) that doesn't start with a vowel results <- getMatches(   labbcat.url, list(columns = list(     list(layers = list(            orthography = list(pattern = \"the\")),          adj = 2),     list(layers = list(            phonemes = list(not=TRUE, pattern = \"[cCEFHiIPqQuUV0123456789~#\\\\$@].*\"),            frequency = list(max = \"2\"))))),   overlap.threshold = 5)  ## all tokens of the KIT vowel, from the interview or monologue ## of the participants AP511_MikeThorpe and BR2044_OllyOhlson results <- getMatches(labbcat.url, list(segment=\"I\"),   participant.expression = expressionFromIds(c(\"AP511_MikeThorpe\",\"BR2044_OllyOhlson\")),   transcript.expression = expressionFromTranscriptTypes(c(\"interview\",\"monologue\")))  ## all tokens of the KIT vowel for male speakers who speak English results <- getMatches(labbcat.url, list(segment=\"I\"),   participant.expression = paste(     expressionFromAttributeValue(\"participant_gender\", \"M\"),     expressionFromAttributeValues(\"participant_languages_spoken\", \"en\"),     sep=\" && \"))  ## results$Text is the text that matched ## results$MatchId can be used to access results using other functions } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotationData.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets binary data for annotations that match a particular pattern. — getMatchingAnnotationData","title":"Gets binary data for annotations that match a particular pattern. — getMatchingAnnotationData","text":"annotation layers, annotations textual label, also binary data associated ; e.g. image data file. cases, 'type' layer MIME type, e.g. 'image/png'. function gets annotations match given expression MIME-typed layer, retrieves binary data files, whose names returned function.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotationData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets binary data for annotations that match a particular pattern. — getMatchingAnnotationData","text":"","code":"getMatchingAnnotationData(labbcat.url, expression, path = \"\")"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotationData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets binary data for annotations that match a particular pattern. — getMatchingAnnotationData","text":"labbcat.url URL LaBB-CAT instance expression expression determines annotations match. must match either id layer.id. expression language currently well defined, based JavaScript syntax. e.g. id == 'e_144_17346' ['e_144_17346', 'e_144_17347', 'e_144_17348'].includes(id) layer.id == 'mediapipe' && graph.id == 'AdaAicheson-01.trs' path Optional path directory files saved.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotationData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets binary data for annotations that match a particular pattern. — getMatchingAnnotationData","text":"names files.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotationData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets binary data for annotations that match a particular pattern. — getMatchingAnnotationData","text":"","code":"if (FALSE) { # \\dontrun{ ## Get mediapipe image annotations for the eleventh second of a transcript expression = paste(sep=\"&&\",                \"layer.id == 'mediapipe'\",                \"graph.id == 'AP511_MikeThorpe.eaf'\",                \"start.offset >= 10\",                \"end.offset < 11\") png.files <- getMatchingAnnotationData(labbcat.url, expression, path=\"png\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of annotations that match a particular pattern — getMatchingAnnotations","title":"Gets a list of annotations that match a particular pattern — getMatchingAnnotations","text":"Returns annotations corpus match given expression.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of annotations that match a particular pattern — getMatchingAnnotations","text":"","code":"getMatchingAnnotations(   labbcat.url,   expression,   page.length = NULL,   page.number = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of annotations that match a particular pattern — getMatchingAnnotations","text":"labbcat.url URL LaBB-CAT instance expression expression determines annotations match. must match either id layer.id. expression language currently well defined, based JavaScript syntax. e.g. id == 'ew_0_456' layerId == 'orthography' && !/th[aeiou].+/.test(label) graph.id == 'AdaAicheson-01.trs' && layer.id == 'orthography' && start.offset &gt; 10.5 layer.id == 'utterance' && ('word').includes('ew_0_456') layerId = 'utterance' && labels('orthography').includes('foo') layerId = 'utterance' && labels('participant').includes('Ada') page.length maximum number IDs return, null return page.number zero-based page number return, null return first page","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of annotations that match a particular pattern — getMatchingAnnotations","text":"list annotations.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets a list of annotations that match a particular pattern — getMatchingAnnotations","text":"results can exhaustive, omitting page.length page.number,  can subset ('page') results, given page.length page.number values.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of annotations that match a particular pattern — getMatchingAnnotations","text":"","code":"if (FALSE) { # \\dontrun{ ## get all topic annotations whose label includes the word 'quake' quake.topics <- getMatchingAnnotations(                    labbcat.url, \"layer.id == 'topic' && /.*quake.*/.test(label)\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingGraphIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated synonym for getMatchingTranscriptIds. — getMatchingGraphIds","title":"Deprecated synonym for getMatchingTranscriptIds. — getMatchingGraphIds","text":"Gets list IDs graphs (.e. transcript names) match particular pattern.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingGraphIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated synonym for getMatchingTranscriptIds. — getMatchingGraphIds","text":"","code":"getMatchingGraphIds(   labbcat.url,   expression,   page.length = NULL,   page.number = NULL,   order = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingGraphIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated synonym for getMatchingTranscriptIds. — getMatchingGraphIds","text":"labbcat.url URL LaBB-CAT instance expression expression determines graphs match page.length maximum number IDs return, null return page.number zero-based page number return, null return first page order expression determines order graphs listed - specified, must include keyword 'ASC' ascending 'DESC' descending order.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingGraphIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated synonym for getMatchingTranscriptIds. — getMatchingGraphIds","text":"list graph IDs (.e. transcript names)","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingGraphIds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated synonym for getMatchingTranscriptIds. — getMatchingGraphIds","text":"results can exhaustive, omitting pageLength page.number,  can subset ('page') results, given pageLength page.number values. order list can specified.  ommitted, graphs listed ID order. expression language currently well defined, based JavaScript syntax. labels function can used represent list annotation labels given layer. example, transcript can multiple participants, participant labels (names) represented : labels('participant')` Use includes function list test whether list contains given element. e.g. match transcripts include participant 'Joe' use: labels('participant').includes('Joe') Use first function identify first () annotation given layer. e.g. annotation representing transcript's corpus : first('corpus') Single annotations various attributes, including 'id', 'label', 'ordinal', etc. e.g. name transcript's corpus : first('corpus').label Regular expressions can matched using expressions like '/regex/.test(str)', e.g. test ID starts 'BR' use: /^BR.+/.test(id) test transcript's corpus includes B use: /.*B.*/.test(first('corpus').label) Expressions examples can used.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingGraphIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated synonym for getMatchingTranscriptIds. — getMatchingGraphIds","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all transcripts whose names start with \"BR\" transcripts <- getMatchingGraphIds(labbcat.url, \"/^BR.+/.test(id)\")  ## Get the first twenty transcripts in the \"QB\" corpus transcripts <- getMatchingGraphIds(         labbcat.url, \"first('corpus').label = 'QB'\", 20, 0)  ## Get the second transcript that has \"QB247_Jacqui\" as a speaker transcripts <- getMatchingGraphIds(         labbcat.url, \"labels('participant').includes('QB247_Jacqui')\", 1, 1)  ## Get all transcripts in the QB corpus whose names start with \"BR\" ## in word-count order  transcripts <- getMatchingGraphIds(         labbcat.url, \"first('corpus').label = 'QB' && /^BR.+/.test(id)\",          order=\"first('transcript_word_count').label ASC\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingParticipantIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of IDs of participants that match a particular pattern — getMatchingParticipantIds","title":"Gets a list of IDs of participants that match a particular pattern — getMatchingParticipantIds","text":"Gets list IDs participants match particular pattern.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingParticipantIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of IDs of participants that match a particular pattern — getMatchingParticipantIds","text":"","code":"getMatchingParticipantIds(   labbcat.url,   expression,   page.length = NULL,   page.number = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingParticipantIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of IDs of participants that match a particular pattern — getMatchingParticipantIds","text":"labbcat.url URL LaBB-CAT instance expression expression determines participants match page.length maximum number IDs return, null return page.number zero-based page number return, null return first page","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingParticipantIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of IDs of participants that match a particular pattern — getMatchingParticipantIds","text":"list paricipant IDs","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingParticipantIds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets a list of IDs of participants that match a particular pattern — getMatchingParticipantIds","text":"results can exhaustive, omitting page.length page.number,  can subset ('page') results, given page.length page.number values. expression language currently well defined, based JavaScript syntax. labels function can used represent list annotation labels given layer. example, participant can multiple corpora, corpus labels (names) represented : labels('corpus') Use includes function list test whether list contains given element. e.g. match participants include corpus 'QB' use: labels('corpus').includes('QB') Use first function identify first () annotation given layer. e.g. annotation representing participant's gender : first('participant_gender') Single annotations various attributes, including 'id', 'label', 'ordinal', etc. e.g. label participant's gender : first('participant_gender').label Regular expressions can matched using expressions like '/regex/.test(str)', e.g. test ID starts 'BR' use: /^BR.+/.test(id) test participant's gender includes 'binary' use: /.*binary.*/.test(first('participant_gender').label) Expressions examples can used.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingParticipantIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of IDs of participants that match a particular pattern — getMatchingParticipantIds","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all participants whose IDs start with \"BR\" participants <- getMatchingParticipantIds(labbcat.url, \"/^BR.+/.test(id)\")  ## Get the first twenty transcripts in the \"QB\" corpus participants <- getMatchingParticipantIds(         labbcat.url, \"labels('corpus').includes('QB')\", 20, 0)  ## Get all participants in the \"QB\" corpus that have \"Jacqui\" as part of the ID participants <- getMatchingTranscriptParticipantIds(         labbcat.url, \"labels('corpus').includes('QB') && /^BR.+/.test(id)\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingTranscriptIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of IDs of transcripts that match a particular pattern — getMatchingTranscriptIds","title":"Gets a list of IDs of transcripts that match a particular pattern — getMatchingTranscriptIds","text":"Gets list IDs transcripts (.e. transcript names) match particular pattern.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingTranscriptIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of IDs of transcripts that match a particular pattern — getMatchingTranscriptIds","text":"","code":"getMatchingTranscriptIds(   labbcat.url,   expression,   page.length = NULL,   page.number = NULL,   order = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingTranscriptIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of IDs of transcripts that match a particular pattern — getMatchingTranscriptIds","text":"labbcat.url URL LaBB-CAT instance expression expression determines transcripts match page.length maximum number IDs return, null return page.number zero-based page number return, null return first page order expression determines order transcripts listed - specified, must include keyword 'ASC' ascending 'DESC' descending order.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingTranscriptIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of IDs of transcripts that match a particular pattern — getMatchingTranscriptIds","text":"list transcript IDs (.e. transcript names)","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingTranscriptIds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets a list of IDs of transcripts that match a particular pattern — getMatchingTranscriptIds","text":"results can exhaustive, omitting page.length page.number,  can subset ('page') results, given page.length page.number values. order list can specified.  ommitted, transcripts listed ID order. expression language currently well defined, based JavaScript syntax. labels function can used represent list annotation labels given layer. example, transcript can multiple participants, participant labels (names) represented : labels('participant') Use includes function list test whether list contains given element. e.g. match transcripts include participant 'Joe' use: labels('participant').includes('Joe') Use first function identify first () annotation given layer. e.g. annotation representing transcript's corpus : first('corpus') Single annotations various attributes, including 'id', 'label', 'ordinal', etc. e.g. name transcript's corpus : first('corpus').label Regular expressions can matched using expressions like '/regex/.test(str)', e.g. test ID starts 'BR' use: /^BR.+/.test(id) test transcript's corpus includes B use: /.*B.*/.test(first('corpus').label) Expressions examples can used.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMatchingTranscriptIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of IDs of transcripts that match a particular pattern — getMatchingTranscriptIds","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all transcripts whose names start with \"BR\" transcripts <- getMatchingTranscriptIds(labbcat.url, \"/^BR.+/.test(id)\")  ## Get the first twenty transcripts in the \"QB\" corpus transcripts <- getMatchingTranscriptIds(         labbcat.url, \"first('corpus').label = 'QB'\", 20, 0)  ## Get the second transcript that has \"QB247_Jacqui\" as a speaker transcripts <- getMatchingTranscriptIds(         labbcat.url, \"labels('participant').includes('QB247_Jacqui')\", 1, 1)  ## Get all transcripts in the QB corpus whose names start with \"BR\" ## in word-count order  transcripts <- getMatchingTranscriptIds(         labbcat.url, \"first('corpus').label = 'QB' && /^BR.+/.test(id)\",         order=\"first('transcript_word_count').label ASC\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMedia.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads a given media track for a given transcript — getMedia","title":"Downloads a given media track for a given transcript — getMedia","text":"Downloads given media track given transcript","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMedia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads a given media track for a given transcript — getMedia","text":"","code":"getMedia(   labbcat.url,   id,   track.suffix = \"\",   mime.type = \"audio/wav\",   path = \"\" )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMedia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads a given media track for a given transcript — getMedia","text":"labbcat.url URL LaBB-CAT instance. id transcript ID (.e. transcript name). track.suffix track suffix media. mime.type MIME type media, e.g. \"audio/wav\" \"application/f0\". path Optional path directory file saved.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMedia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads a given media track for a given transcript — getMedia","text":"name file, saved current directory, given path specified","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMedia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads a given media track for a given transcript — getMedia","text":"","code":"if (FALSE) { # \\dontrun{ ## Download the WAV file for BR2044_OllyOhlson.eaf wav <- getMedia(labbcat.url, \"BR2044_OllyOhlson.eaf\")  ## Download the 'QuakeFace' video file for BR2044_OllyOhlson.eaf quakeFaceMp4 <- getMedia(labbcat.url, \"BR2044_OllyOhlson.eaf\", \"_face\", \"video/mp4\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaTracks.html","id":null,"dir":"Reference","previous_headings":"","what":"List the predefined media tracks available for transcripts — getMediaTracks","title":"List the predefined media tracks available for transcripts — getMediaTracks","text":"List predefined media tracks available transcripts","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaTracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the predefined media tracks available for transcripts — getMediaTracks","text":"","code":"getMediaTracks(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaTracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the predefined media tracks available for transcripts — getMediaTracks","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaTracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the predefined media tracks available for transcripts — getMediaTracks","text":"list media track definitions.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaTracks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the predefined media tracks available for transcripts — getMediaTracks","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the media tracks configured in LaBB-CAT tracks <- getMediaTracks(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaUrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the URL of the given media track for a given transcript — getMediaUrl","title":"Gets the URL of the given media track for a given transcript — getMediaUrl","text":"Gets URL given media track given transcript","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaUrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the URL of the given media track for a given transcript — getMediaUrl","text":"","code":"getMediaUrl(labbcat.url, id, track.suffix = \"\", mime.type = \"audio/wav\")"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaUrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the URL of the given media track for a given transcript — getMediaUrl","text":"labbcat.url URL LaBB-CAT instance. id transcript ID (.e. transcript name). track.suffix track suffix media. mime.type MIME type media, e.g. \"audio/wav\" \"application/f0\".","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaUrl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the URL of the given media track for a given transcript — getMediaUrl","text":"URL given media given transcript.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getMediaUrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the URL of the given media track for a given transcript — getMediaUrl","text":"","code":"if (FALSE) { # \\dontrun{ ## Get URL for the WAV file for BR2044_OllyOhlson.eaf wavUrl <- getMediaUrl(labbcat.url, \"BR2044_OllyOhlson.eaf\")  ## Get URL for the 'QuakeFace' video file for BR2044_OllyOhlson.eaf quakeFaceMp4Url <- getMediaUrl(labbcat.url, \"BR2044_OllyOhlson.eaf\", \"_face\", \"video/mp4\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipant.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets information about a single participant — getParticipant","title":"Gets information about a single participant — getParticipant","text":"Returns nested named list participant information, including given participant attributes.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets information about a single participant — getParticipant","text":"","code":"getParticipant(labbcat.url, id, layer.ids)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets information about a single participant — getParticipant","text":"labbcat.url URL LaBB-CAT instance id participant ID layer.ids vector layer IDs corresponding participant attributes, eg. c('participant_gender', 'participant_year_of_birth')","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets information about a single participant — getParticipant","text":"named list representing participant attributes, members: id participant's unique internal database ID label ID (name) participant annotations named list participant attributes e.g. label participant's 'gender' attribute : participant$annotations$participant_gender$label","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets information about a single participant — getParticipant","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the gender and year of birth of AP511_MikeThorpe participant <- getParticipant(labbcat.url, \"AP511_MikeThorpe\",                   c(\"participant_gender\", \"participant_year_of_birth\"))  print(paste(\"ID:\", participant$label,             \"Gender:\", participant$annotations$participant_gender$label,             \"YOB:\", participant$annotations$participant_year_of_birth$label)) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets participant attribute values for given participant IDs — getParticipantAttributes","title":"Gets participant attribute values for given participant IDs — getParticipantAttributes","text":"Gets participant attribute values given participant IDs","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets participant attribute values for given participant IDs — getParticipantAttributes","text":"","code":"getParticipantAttributes(labbcat.url, participant.ids, layer.ids)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets participant attribute values for given participant IDs — getParticipantAttributes","text":"labbcat.url URL LaBB-CAT instance participant.ids vector participant IDs layer.ids vector layer IDs corresponding participant attributes. general, layers whose ID prefixed 'participant_', however formally layer layer$parentId == 'participant' && layer$alignment == 0.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantAttributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets participant attribute values for given participant IDs — getParticipantAttributes","text":"data frame attribute value labels.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantAttributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets participant attribute values for given participant IDs — getParticipantAttributes","text":"","code":"if (FALSE) { # \\dontrun{ ## Get gender and age for all participants attributes <- getParticipantAttributes(labbcat.url,             getParticipantIds(labbcat.url),             c('participant_gender', 'participant_age'))  } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of participant IDs — getParticipantIds","title":"Gets a list of participant IDs — getParticipantIds","text":"Returns list participant IDs.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of participant IDs — getParticipantIds","text":"","code":"getParticipantIds(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of participant IDs — getParticipantIds","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of participant IDs — getParticipantIds","text":"list participant IDs","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getParticipantIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of participant IDs — getParticipantIds","text":"","code":"if (FALSE) { # \\dontrun{ ## List all speakers speakers <- getParticipantIds(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSerializerDescriptors.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists the descriptors of all registered serializers — getSerializerDescriptors","title":"Lists the descriptors of all registered serializers — getSerializerDescriptors","text":"Returns list serializers, modules export annotation structures specific file format, e.g. Praat TextGrid, plain text, etc., mimeType descriptors reflects mimeTypes can specified getFragments.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSerializerDescriptors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists the descriptors of all registered serializers — getSerializerDescriptors","text":"","code":"getSerializerDescriptors(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSerializerDescriptors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lists the descriptors of all registered serializers — getSerializerDescriptors","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSerializerDescriptors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists the descriptors of all registered serializers — getSerializerDescriptors","text":"list serializers, including following information: name name format. version installed version serializer module. fileSuffixes normal file name suffixes (extensions) files. mimeType MIME type format, .e. value use mimeType parameter getFragments","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSerializerDescriptors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lists the descriptors of all registered serializers — getSerializerDescriptors","text":"","code":"if (FALSE) { # \\dontrun{ ## List file export formats supported formats <- getSerializerDescriptors(\"https://labbcat.canterbury.ac.nz/demo/\")  ## can we export as plain text? plainTextSupported <- \"text/plain\" %in% formats$mimeType } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSoundFragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets sound fragments from 'LaBB-CAT'. — getSoundFragments","title":"Gets sound fragments from 'LaBB-CAT'. — getSoundFragments","text":"Gets sound fragments 'LaBB-CAT'.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSoundFragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets sound fragments from 'LaBB-CAT'. — getSoundFragments","text":"","code":"getSoundFragments(   labbcat.url,   ids,   start.offsets,   end.offsets,   sample.rate = NULL,   path = \"\",   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSoundFragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets sound fragments from 'LaBB-CAT'. — getSoundFragments","text":"labbcat.url URL LaBB-CAT instance ids transcript ID (transcript name) sound recording, vector transcript IDs. start.offsets start time seconds, vector start times. end.offsets end time seconds, vector end times. sample.rate Optional sample rate Hz - positive integer, result mono file given sample rate. path Optional path directory files saved. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSoundFragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets sound fragments from 'LaBB-CAT'. — getSoundFragments","text":"name file, saved current directory, list names files, multiple id's/start's/end's specified list files returned, order returned server, order specified id/start/end lists.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSoundFragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets sound fragments from 'LaBB-CAT'. — getSoundFragments","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the 5 seconds starting from 10s after the beginning of a recording wav.file <- getSoundFragments(labbcat.url, \"AP2505_Nelson.eaf\", 10.0, 15.0, path=\"samples\")  ## Get the 5 seconds starting from 10s as a mono 22kHz file wav.file <- getSoundFragments(labbcat.url, \"AP2505_Nelson.eaf\", 10.0, 15.0, 22050)  ## Load some search results previously exported from LaBB-CAT results <- read.csv(\"results.csv\", header=T)  ## Get a list of fragments wav.files <- getSoundFragments(labbcat.url, results$Transcript, results$Line, results$LineEnd)  ## Get a list of fragments wav.file <- getSoundFragments(               labbcat.url, results$Transcript, results$Line, results$LineEnd) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSystemAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the value of the given system attribute — getSystemAttribute","title":"Gets the value of the given system attribute — getSystemAttribute","text":"Gets value given system attribute","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSystemAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the value of the given system attribute — getSystemAttribute","text":"","code":"getSystemAttribute(labbcat.url, attribute)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSystemAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the value of the given system attribute — getSystemAttribute","text":"labbcat.url URL LaBB-CAT instance attribute Name attribute.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSystemAttribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the value of the given system attribute — getSystemAttribute","text":"value given attribute.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getSystemAttribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the value of the given system attribute — getSystemAttribute","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the name of the LaBB-CAT instance title <- getSystemAttribute(\"https://labbcat.canterbury.ac.nz/demo/\", \"title\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets transcript attribute values for given transcript IDs — getTranscriptAttributes","title":"Gets transcript attribute values for given transcript IDs — getTranscriptAttributes","text":"Gets transcript attribute values given transcript IDs","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets transcript attribute values for given transcript IDs — getTranscriptAttributes","text":"","code":"getTranscriptAttributes(labbcat.url, transcript.ids, layer.ids)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets transcript attribute values for given transcript IDs — getTranscriptAttributes","text":"labbcat.url URL LaBB-CAT instance transcript.ids vector transcript IDs layer.ids vector layer IDs corresponding transcript attributes. general, layers whose ID prefixed 'transcript_', however formally layer layer$parentId == 'transcript' && layer$alignment == 0, includes 'corpus' well transcript attribute layers.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptAttributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets transcript attribute values for given transcript IDs — getTranscriptAttributes","text":"data frame attribute value labels.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptAttributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets transcript attribute values for given transcript IDs — getTranscriptAttributes","text":"","code":"if (FALSE) { # \\dontrun{ ## Get language, duration, and corpus for transcripts starting with 'BR' attributes <- getTranscriptAttributes(labbcat.url,             getMatchingTranscriptIds(labbcat.url, \"/'BR.+'/.test(id)\"),             c('transcript_language', 'transcript_duration', 'corpus'))  } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of transcript IDs — getTranscriptIds","title":"Gets a list of transcript IDs — getTranscriptIds","text":"Returns list transcript IDs (.e. transcript names).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of transcript IDs — getTranscriptIds","text":"","code":"getTranscriptIds(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of transcript IDs — getTranscriptIds","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of transcript IDs — getTranscriptIds","text":"list transcript IDs","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of transcript IDs — getTranscriptIds","text":"","code":"if (FALSE) { # \\dontrun{ ## List all transcripts transcripts <- getTranscriptIds(\"https://labbcat.canterbury.ac.nz/demo/\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsInCorpus.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of transcript in a corpus — getTranscriptIdsInCorpus","title":"Gets a list of transcript in a corpus — getTranscriptIdsInCorpus","text":"Returns list transcript IDs given corpus.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsInCorpus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of transcript in a corpus — getTranscriptIdsInCorpus","text":"","code":"getTranscriptIdsInCorpus(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsInCorpus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of transcript in a corpus — getTranscriptIdsInCorpus","text":"labbcat.url URL LaBB-CAT instance id ID (name) corpus","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsInCorpus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of transcript in a corpus — getTranscriptIdsInCorpus","text":"list transcript IDs","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsInCorpus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of transcript in a corpus — getTranscriptIdsInCorpus","text":"","code":"if (FALSE) { # \\dontrun{ ## List transcripts in the QB corpus transcripts <- getTranscriptIdsInCorpus(\"https://labbcat.canterbury.ac.nz/demo/\", \"QB\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsWithParticipant.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of IDs of transcripts that include the given participant — getTranscriptIdsWithParticipant","title":"Gets a list of IDs of transcripts that include the given participant — getTranscriptIdsWithParticipant","text":"Returns list IDs transcripts (.e. transcript names) include given participant.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsWithParticipant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a list of IDs of transcripts that include the given participant — getTranscriptIdsWithParticipant","text":"","code":"getTranscriptIdsWithParticipant(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsWithParticipant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a list of IDs of transcripts that include the given participant — getTranscriptIdsWithParticipant","text":"labbcat.url URL LaBB-CAT instance id participant ID","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsWithParticipant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a list of IDs of transcripts that include the given participant — getTranscriptIdsWithParticipant","text":"list transcript IDs","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getTranscriptIdsWithParticipant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a list of IDs of transcripts that include the given participant — getTranscriptIdsWithParticipant","text":"","code":"if (FALSE) { # \\dontrun{ ## List transcripts in which UC427_ViktoriaPapp_A_ENG speaks transcripts <- getTranscriptIdsWithParticipant(labbcat.url, \"UC427_ViktoriaPapp_A_ENG\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getUserInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets information about the current user — getUserInfo","title":"Gets information about the current user — getUserInfo","text":"Returns information current user, including roles groups .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getUserInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets information about the current user — getUserInfo","text":"","code":"getUserInfo(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/getUserInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets information about the current user — getUserInfo","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/getUserInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets information about the current user — getUserInfo","text":"named list containing information current LaBB-CAT user.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/getUserInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets information about the current user — getUserInfo","text":"","code":"if (FALSE) { # \\dontrun{ ## List file export formats supported me <- getUserInfo(\"https://labbcat.canterbury.ac.nz/demo/\")  ## am I an administrator? admin <- \"admin\" %in% me$roles } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatCredentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the username and password for a given LaBB-CAT server — labbcatCredentials","title":"Sets the username and password for a given LaBB-CAT server — labbcatCredentials","text":"Sets username password package use connecting given LaBB-CAT server future function calls.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatCredentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the username and password for a given LaBB-CAT server — labbcatCredentials","text":"","code":"labbcatCredentials(labbcat.url, username, password, auth.method = NULL)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatCredentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the username and password for a given LaBB-CAT server — labbcatCredentials","text":"labbcat.url URL LaBB-CAT instance. username LaBB-CAT username, password-protected. password LaBB-CAT password, password-protected. auth.method HTTP authentication method use (e.g. \"Basic\" \"Form\", NULL detect automatically.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatCredentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the username and password for a given LaBB-CAT server — labbcatCredentials","text":"NULL username/password correct, string describing problem problem occurred, e.g. \"Credentials rejected\" username/password incorrect, string starting \"Version mismatch\" server's version LaBB-CAT lower minimum required.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatCredentials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sets the username and password for a given LaBB-CAT server — labbcatCredentials","text":"using R interactively, step optional, functions prompt user username password required. script running RStudio, RStudio password input dialog used, hiding credentials view. Otherwise, console used, credentials visible. recommended approach use labbcatCredentials, avoid saving user credentials script files may eventually become visible . Use labbcatCredentials cases script execution unsupervised, e.g. executing R script shell script, using Knit render Rmarkdown document. must use labbcatCredentials, avoid including actual username password script. recommended approach store username password (perhaps URL ) .Renviron file (home directory, project directory), like :   call Sys.getenv retrieve username/password, illustrated example.","code":"LABBCAT_URL=https://labbcat.canterbury.ac.nz/demo/ LABBCAT_USERNAME=demo LABBCAT_PASSWORD=demo"},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatCredentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the username and password for a given LaBB-CAT server — labbcatCredentials","text":"","code":"if (FALSE) { # \\dontrun{ ## load the LaBB-CAT URL from .Renviron labbcat.url <- Sys.getenv('LABBCAT_URL')  ## load the username/password from .Renviron so secrets are not included in the script: labbcatCredentials(     labbcat.url, Sys.getenv('LABBCAT_USERNAME'), Sys.getenv('LABBCAT_PASSWORD')) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatTimeout.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the timeout for request to the LaBB-CAT server in future function calls. The default timeout is 10 seconds — labbcatTimeout","title":"Sets the timeout for request to the LaBB-CAT server in future function calls. The default timeout is 10 seconds — labbcatTimeout","text":"Sets timeout request LaBB-CAT server future function calls. default timeout 10 seconds","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatTimeout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the timeout for request to the LaBB-CAT server in future function calls. The default timeout is 10 seconds — labbcatTimeout","text":"","code":"labbcatTimeout(seconds = NULL)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatTimeout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the timeout for request to the LaBB-CAT server in future function calls. The default timeout is 10 seconds — labbcatTimeout","text":"seconds number seconds requests return timeout error.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatTimeout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the timeout for request to the LaBB-CAT server in future function calls. The default timeout is 10 seconds — labbcatTimeout","text":"request timeout seconds","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatTimeout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the timeout for request to the LaBB-CAT server in future function calls. The default timeout is 10 seconds — labbcatTimeout","text":"","code":"if (FALSE) { # \\dontrun{ ## the request timeout labbcatTimeout(30) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatVersionInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets version information of all components of LaBB-CAT — labbcatVersionInfo","title":"Gets version information of all components of LaBB-CAT — labbcatVersionInfo","text":"Version information includes versions components modules installed LaBB-CAT server, including format converters annotator modules.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatVersionInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets version information of all components of LaBB-CAT — labbcatVersionInfo","text":"","code":"labbcatVersionInfo(labbcat.url)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatVersionInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets version information of all components of LaBB-CAT — labbcatVersionInfo","text":"labbcat.url URL LaBB-CAT instance","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatVersionInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets version information of all components of LaBB-CAT — labbcatVersionInfo","text":"versions different components LaBB-CAT, divided sections: System Overall LaBB-CAT system components Formats Annotation format conversion modules Layer Managers Annotator module versions 3rd Pary Software Versions software installed server LaBB-CAT integrates , e.g. Praat, FastTrack, etc. RDBMS MySQL Server version information","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/labbcatVersionInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets version information of all components of LaBB-CAT — labbcatVersionInfo","text":"","code":"if (FALSE) { # \\dontrun{ ## Get ID of LaBB-CAT instance versionInfo <- labbcatVersionInfo(\"https://labbcat.canterbury.ac.nz/demo/\") print(paste(\"LaBB-CAT version\", versionInfo$System$'LaBB-CAT', \" Full version info:\")) print(t(as.data.frame(versionInfo))) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/loadLexicon.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a flat lexicon file for lexical tagging — loadLexicon","title":"Upload a flat lexicon file for lexical tagging — loadLexicon","text":"default LaBB-CAT includes layer manager called Flat Lexicon Tagger, can configured annotate words data dictionary loaded plain text file (e.g. CSV file). file must 'flat' structure sense simple list dictionary entries fixed number columns/fields, rather complex structure.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/loadLexicon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a flat lexicon file for lexical tagging — loadLexicon","text":"","code":"loadLexicon(   labbcat.url,   file,   lexicon,   field.delimiter,   field.names,   quote = \"\",   comment = \"\",   skip.first.line = FALSE,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/loadLexicon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a flat lexicon file for lexical tagging — loadLexicon","text":"labbcat.url URL LaBB-CAT instance. file full path name lexicon file. lexicon name resulting lexicon. named lexicon already exists, completely replaced contents file (.e. existing entries deleted befor adding new entries file). e.g. 'cmudict' field.delimiter character used delimit fields file. \" - \", rows split first space, line common dictionary formats. e.g. ',' Comma Separated Values (CSV) files. field.names list field names, delimited field.delimiter, e.g. 'Word,Pronunciation'. quote character used quote field values (), e.g. '\"'. comment character used indicate line comment (entry) () e.g. '#'. skip.first.line Whether ignore first line file (contains field names). .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/loadLexicon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a flat lexicon file for lexical tagging — loadLexicon","text":"error message, NULL upload successful.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/loadLexicon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload a flat lexicon file for lexical tagging — loadLexicon","text":"function uploads lexicon file, use tagging tokens. must editing privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/loadLexicon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a flat lexicon file for lexical tagging — loadLexicon","text":"","code":"if (FALSE) { # \\dontrun{ ## Upload the CMU Pronouncing Dictionary  loadLexicon(labbcat.url, \"cmudict\", \" - \", \"\", \";\", \"Word - Pron\", FALSE, \"cmudict.txt\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/newLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a new layer — newLayer","title":"Creates a new layer — newLayer","text":"function creates new annotation layer. layer may configured layer manager ID task parameters, automatic annotation. , function create layer automation task, automatic annotation run function. generate automatic annotations, use generateLayer.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/newLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a new layer — newLayer","text":"","code":"newLayer(   labbcat.url,   layer.id,   description,   type = \"string\",   alignment = 0,   category = \"General\",   parent.id = \"word\",   annotator.id = NULL,   annotator.task.parameters = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/newLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a new layer — newLayer","text":"labbcat.url URL LaBB-CAT instance layer.id ID layer create, must unique LaBB-CAT instance. description description annotations layer contain. type type data labels represent. Valid values \"string\", \"number\", \"ipa\" (phoneme representations), \"boolean\" (labels \"0\" \"1\"). alignment annotations layer relate time alignment; valid values 0 (alignment; annototations just tags parent annotation), 1 (instants; annotations mark single point time), 2 (intervals; annotations start end time). category project/category layer belongs . parent.id parent layer; valid values \"word\" (word layers), \"segment\" (segment layers) \"turn\" (phrase layers), \"transcript\" (span layers). annotator.id ID layer manager automatically fills annotations layer, annotator.task.parameters configuration layer manager use filling layer annotations. string whose format specific layer manager.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/newLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a new layer — newLayer","text":"resulting layer definition, members: id layer's unique ID parentId layer's parent layer ID description description layer alignment layer's alignment - 0 none, 1 point alignment, 2 interval alignment peers Whether children peers peersOverlap Whether child peers can overlap parentIncludes Whether parent t-includes child saturated Whether children must temporally fill entire parent duration (true) (false) parentIncludes Whether parent t-includes child type type labels layer validLabels List valid label values layer","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/newLayer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a new layer — newLayer","text":"must administration privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/newLayer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a new layer — newLayer","text":"","code":"if (FALSE) { # \\dontrun{ ## Upload the CMU Pronouncing Dictionary  loadLexicon(labbcat.url, \"cmudict\", \" - \", \"\", \";\", \"Word - Pron\", FALSE, \"cmudict.txt\")  ## Create a layer that tags each token with its CMU Pronouncing Dictionary pronunciation newLayer(labbcat.url, \"pronunciation\", \"CMU Dict pronunciations encoded in ARPAbet\",          annotator.id=\"FlatFileDictionary\",          annotator.task.parameters=              \"tokenLayerId=orthography&tagLayerId=phonemes&dictionary=cmudict:Word->Pron\")  ## Generate the pronunciation tags generateLayer(labbcat.url, \"pronunciation\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/newTranscript.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a new transcript — newTranscript","title":"Upload a new transcript — newTranscript","text":"function adds transcript optionally media file corpus.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/newTranscript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a new transcript — newTranscript","text":"","code":"newTranscript(   labbcat.url,   transcript,   media = NULL,   transcript.type = NULL,   corpus = NULL,   episode = NULL,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/newTranscript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a new transcript — newTranscript","text":"labbcat.url URL LaBB-CAT instance transcript path transcript upload. media path media upload, . transcript.type transcript type. corpus corpus add transcript . episode transcript's episode. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/newTranscript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a new transcript — newTranscript","text":"ID new transcript corpus","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/newTranscript.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload a new transcript — newTranscript","text":"NB method uploading alternative using transcriptUpload transcriptUploadParameters. function work, credentials used connect server must least 'edit' access.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/newTranscript.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a new transcript — newTranscript","text":"","code":"if (FALSE) { # \\dontrun{ ## Get attributes for new transcript corpus <- getCorpusIds(labbcat.url)[1] transcript.type.layer <- getLayer(labbcat.url, \"transcript_type\") transcript.type <- transcript.type.layer$validLabels[[1]]  ## upload transcript newTranscript(     labbcat.url, \"my-transcript.eaf\", \"my-transcript.wav\",     \"\", transcript.type, corpus, \"episode-1\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/nzilbb.labbcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing Data Stored in 'LaBB-CAT' Instances — nzilbb.labbcat","title":"Accessing Data Stored in 'LaBB-CAT' Instances — nzilbb.labbcat","text":"'LaBB-CAT' web-based language corpus management  system developed New Zealand Institute Language, Brain  Behaviour (NZILBB) - see <https://labbcat.canterbury.ac.nz>.  package defines functions accessing corpus data 'LaBB-CAT'  instance. must least version 20230818.1400 'LaBB-CAT'  use package.  information 'LaBB-CAT', see  Robert Fromont Jennifer Hay (2008) <doi:10.3366/E1749503208000142>   Robert Fromont (2017) <doi:10.1016/j.csl.2017.01.004>.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/nzilbb.labbcat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accessing Data Stored in 'LaBB-CAT' Instances — nzilbb.labbcat","text":"package yet installed build time.   Index:  package yet installed build time. 'LaBB-CAT' web-based language corpus management system package provides access data stored 'LaBB-CAT' instance. must least version 20230818.1400 'LaBB-CAT' use package.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/nzilbb.labbcat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accessing Data Stored in 'LaBB-CAT' Instances — nzilbb.labbcat","text":"Robert Fromont Jennifer Hay, \"ONZE Miner: development browser-based research tool\", 2008 Robert Fromont, \"Toward format-neutral annotation store\", 2017","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/nzilbb.labbcat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Accessing Data Stored in 'LaBB-CAT' Instances — nzilbb.labbcat","text":"Robert Fromont [aut, cre] (<https://orcid.org/0000-0001-5271-5487>)","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/nzilbb.labbcat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessing Data Stored in 'LaBB-CAT' Instances — nzilbb.labbcat","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search results <- getMatches(labbcat.url, list(segment=\"I\")) |>     ## Get the phonemic transcriptions for the matches     appendLabels(\"phonemes\")  ## Get sound fragments for the matches wav.files <- getSoundFragments(labbcat.url, results$Transcript, results$Line, results$LineEnd) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptCentreOfGravity.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a script for extracting the CoG, for use with processWithPraat — praatScriptCentreOfGravity","title":"Generates a script for extracting the CoG, for use with processWithPraat — praatScriptCentreOfGravity","text":"function generates Praat script fragment can passed praat.script parameter processWithPraat, order extract one spectral centre gravity (CoG) measurements.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptCentreOfGravity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a script for extracting the CoG, for use with processWithPraat — praatScriptCentreOfGravity","text":"","code":"praatScriptCentreOfGravity(powers = c(2), spectrum.fast = TRUE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptCentreOfGravity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a script for extracting the CoG, for use with processWithPraat — praatScriptCentreOfGravity","text":"powers vector numbers specifying powers query extract, e.g. c(1.0,2.0). spectrum.fast Whether use 'fast' option creating spectrum object query.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptCentreOfGravity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a script for extracting the CoG, for use with processWithPraat — praatScriptCentreOfGravity","text":"script fragment can passed praat.script parameter processWithPraat","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptCentreOfGravity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a script for extracting the CoG, for use with processWithPraat — praatScriptCentreOfGravity","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search results <- getMatches(labbcat.url, list(segment=\"I\"))  ## Get centres of gravity for all matches cog <- processWithPraat(               labbcat.url,               results$MatchId, results$Target.segment.start, results$Target.segment.end,               praatScriptCentreOfGravity(powers=c(1.0,2.0))) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFastTrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a script for extracting formants using FastTrack, for use with processWithPraat — praatScriptFastTrack","title":"Generates a script for extracting formants using FastTrack, for use with processWithPraat — praatScriptFastTrack","text":"function generates Praat script fragment can passed praat.script parameter processWithPraat, order extract selected formants using FastTrack Praat plugin.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFastTrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a script for extracting formants using FastTrack, for use with processWithPraat — praatScriptFastTrack","text":"","code":"praatScriptFastTrack(   formants = c(1, 2),   sample.points = c(0.5),   lowest.analysis.frequency = 5000,   lowest.analysis.frequency.male = 4500,   highest.analysis.frequency = 7000,   highest.analysis.frequency.male = 6500,   gender.attribute = \"participant_gender\",   value.for.male = \"M\",   time.step = 0.002,   tracking.method = \"burg\",   number.of.formants = 3,   maximum.f1.frequency = 1200,   maximum.f1.bandwidth = NULL,   maximum.f2.bandwidth = NULL,   maximum.f3.bandwidth = NULL,   minimum.f4.frequency = 2900,   enable.rhotic.heuristic = TRUE,   enable.f3.f4.proximity.heuristic = TRUE,   number.of.steps = 20,   number.of.coefficients = 5 )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFastTrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a script for extracting formants using FastTrack, for use with processWithPraat — praatScriptFastTrack","text":"formants vector integers specifying formants extract, e.g c(1,2) first second formant. sample.points vector numbers (0 <= sample.points <= 1) specifying multiple points take measurement.  default single point 0.5 - means one measurement taken halfway target interval.  , example, wanted eleven measurements evenly spaced throughout interval, specify sample.points c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0). lowest.analysis.frequency Lowest analysis frequency (Hz) default. lowest.analysis.frequency.male Lowest analysis frequency (Hz) male speakers, NULL use value lowest.analysis.frequency. highest.analysis.frequency Highest analysis frequency (Hz) default. highest.analysis.frequency.male Highest analysis frequency (Hz) male speakers, NULL use value highest.analysis.frequency. gender.attribute Name LaBB-CAT participant attribute contains participant's gender - normally \"participant_gender\". value..male value gender.attribute participant male. time.step Time step seconds. tracking.method tracking_method parameter trackAutoselectProcedure; \"burg\" \"robust\". number..formants Number formants track - 3 4. maximum.f1.frequency Specifying non-NULL value enables F1 frequency heuristic: Median F1 frequency higher value. maximum.f1.bandwidth Specifying non-NULL value (e.g. 500) enables F1 bandwidth heuristic: Median F1 bandwidth higher value. maximum.f2.bandwidth Specifying non-NULL value (e.g. 600) enables F2 bandwidth heuristic: Median F2 bandwidth higher value. maximum.f3.bandwidth Specifying non-NULL value (e.g. 900) enables F3 bandwidth heuristic: Median F3 bandwidth higher value. minimum.f4.frequency Specifying non-NULL value enables F4 frequency heuristic: Median F4 frequency lower value. enable.rhotic.heuristic Whether enable rhotic heuristic: F3 < 2000 Hz, F1 F2 least 500 Hz apart. enable.f3.f4.proximity.heuristic Whether enable F3/F4 proximity heuristic: (F4 - F3) < 500 Hz, F1 F2 least 1500 Hz apart. number..steps Number analyses low high analysis limits. analysis steps may improve results, increase analysis time (50 percent steps = around 50 percent longer analyze). number..coefficients Number coefficients formant prediction. coefficients allow sudden, 'wiggly' formant motion.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFastTrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a script for extracting formants using FastTrack, for use with processWithPraat — praatScriptFastTrack","text":"script fragment can passed praat.script parameter processWithPraat","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFastTrack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a script for extracting formants using FastTrack, for use with processWithPraat — praatScriptFastTrack","text":"FastTrack Praat plugin, developed Santiago Barreda, automatically runs multiple formant analyses segment, selects best (smoothest, optional heuristics), makes winning formant object available measurement. information, see https://github.com/santiagobarreda/FastTrack","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFastTrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a script for extracting formants using FastTrack, for use with processWithPraat — praatScriptFastTrack","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all tokens of the KIT vowel results <- getMatches(labbcat.url, list(segment=\"I\"))  ## Get the first 3 formants at three points during the vowel formants <- processWithPraat(               labbcat.url,               results$MatchId, results$Target.segment.start, results$Target.segment.end,               window.offset=0.025,               praatScriptFastTrack(formants=c(1,2,3),               sample.points=c(0.25,0.5,0.75))) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFormants.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a script for extracting formants, for use with processWithPraat — praatScriptFormants","title":"Generates a script for extracting formants, for use with processWithPraat — praatScriptFormants","text":"function generates Praat script fragment can passed praat.script parameter processWithPraat, order extract selected formants.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFormants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a script for extracting formants, for use with processWithPraat — praatScriptFormants","text":"","code":"praatScriptFormants(   formants = c(1, 2),   sample.points = c(0.5),   time.step = 0,   max.number.formants = 5,   max.formant = 5500,   max.formant.male = 5000,   gender.attribute = \"participant_gender\",   value.for.male = \"M\",   window.length = 0.025,   preemphasis.from = 50 )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFormants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a script for extracting formants, for use with processWithPraat — praatScriptFormants","text":"formants vector integers specifying formants extract, e.g c(1,2) first second formant. sample.points vector numbers (0 <= sample.points <= 1) specifying multiple points take measurement.  default single point 0.5 - means one measurement taken halfway target interval.  , example, wanted eleven measurements evenly spaced throughout interval, specify sample.points c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0). time.step Time step seconds, 0.0 'auto'. max.number.formants Maximum number formants. max.formant Maximum formant value (Hz) speakers, female speakers, max.formant.male also specified. max.formant.male Maximum formant value (Hz) male speakers, NULL use value max.formant. gender.attribute Name LaBB-CAT participant attribute contains participant's gender - normally \"participant_gender\". value..male value gender.attribute participant male. window.length Window length seconds. preemphasis.Pre-emphasis (Hz)","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFormants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a script for extracting formants, for use with processWithPraat — praatScriptFormants","text":"script fragment can passed praat.script parameter processWithPraat","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFormants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a script for extracting formants, for use with processWithPraat — praatScriptFormants","text":"praatScriptFastTrack function provides alternative function uses FastTrack Praat plugin formant analysis.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptFormants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a script for extracting formants, for use with processWithPraat — praatScriptFormants","text":"","code":"if (FALSE) { # \\dontrun{ ## Get all tokens of the KIT vowel results <- getMatches(labbcat.url, list(segment=\"I\"))  ## Get the first 3 formants at three points during the vowel formants <- processWithPraat(               labbcat.url,               results$MatchId, results$Target.segment.start, results$Target.segment.end,               window.offset=0.025,               praatScriptFormants(formants=c(1,2,3),               sample.points=c(0.25,0.5,0.75))) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a script for extracting maximum intensity, for use with processWithPraat — praatScriptIntensity","title":"Generates a script for extracting maximum intensity, for use with processWithPraat — praatScriptIntensity","text":"function generates Praat script fragment can passed praat.script parameter processWithPraat, order extract maximum intensity value.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a script for extracting maximum intensity, for use with processWithPraat — praatScriptIntensity","text":"","code":"praatScriptIntensity(   minimum.pitch = 100,   time.step = 0,   subtract.mean = TRUE,   get.maximum = TRUE,   sample.points = NULL,   interpolation = \"cubic\",   skip.errors = TRUE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a script for extracting maximum intensity, for use with processWithPraat — praatScriptIntensity","text":"minimum.pitch Minimum pitch (Hz). time.step Time step seconds, 0.0 'auto'. subtract.mean Whether subtract mean . get.maximum Extract maximum intensity sample. sample.points vector numbers (0 <= sample.points <= 1) specifying multiple points take measurement.  default NULL, meaning individual measurements taken (aggregate values identified get.mean, get.minimum, get.maximum).  single point 0.5 means one measurement taken halfway target interval.  , example, wanted eleven measurements evenly spaced throughout interval, specify sample.points c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0). interpolation sample.points specified, interpolation use getting individual values. Possible values 'nearest', 'linear', 'cubic', 'sinc70', 'sinc700'. skip.errors Sometimes, segments, Praat fails create Intensity object. skip.errors = TRUE, analysis segments skipped, corresponding pitch values returned \"–undefined–\". skip.errors = FALSE, error message Praat returned Error field, pitch measures returned segments recording.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a script for extracting maximum intensity, for use with processWithPraat — praatScriptIntensity","text":"script fragment can passed praat.script parameter processWithPraat","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptIntensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a script for extracting maximum intensity, for use with processWithPraat — praatScriptIntensity","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search results <- getMatches(labbcat.url, list(segment=\"s\"))  ## Get max intensity, and intensity at three points during the segment, for all matches intensity <- processWithPraat(               labbcat.url,               results$MatchId, results$Target.segment.start, results$Target.segment.end,               praatScriptIntensity(sample.points = c(.25, .5, .75))) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptPitch.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a script for extracting pitch, for use with processWithPraat — praatScriptPitch","title":"Generates a script for extracting pitch, for use with processWithPraat — praatScriptPitch","text":"function generates Praat script fragment can passed praat.script parameter processWithPraat, order extract pitch information.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptPitch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a script for extracting pitch, for use with processWithPraat — praatScriptPitch","text":"","code":"praatScriptPitch(   get.mean = TRUE,   get.minimum = FALSE,   get.maximum = FALSE,   time.step = 0,   pitch.floor = 60,   max.number.of.candidates = 15,   very.accurate = FALSE,   silence.threshold = 0.03,   voicing.threshold = 0.5,   octave.cost = 0.01,   octave.jump.cost = 0.35,   voiced.unvoiced.cost = 0.35,   pitch.ceiling = 500,   pitch.floor.male = 30,   voicing.threshold.male = 0.4,   pitch.ceiling.male = 250,   gender.attribute = \"participant_gender\",   value.for.male = \"M\",   sample.points = NULL,   interpolation = \"linear\",   skip.errors = TRUE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptPitch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a script for extracting pitch, for use with processWithPraat — praatScriptPitch","text":"get.mean Extract mean pitch sample. get.minimum Extract minimum pitch sample. get.maximum Extract maximum pitch sample. time.step Step setting praat command pitch.floor Minimum pitch (Hz) speakers, female speakers, pitch.floor.male also specified. max.number..candidates Maximum number candidates setting praat command .accurate Accuracy setting praat command silence.threshold Silence threshold setting praat command voicing.threshold Voicing threshold (Hz) speakers, female speakers, voicing.threshold.male also specified. octave.cost Octave cost setting praat command octave.jump.cost Octave jump cost setting praat command voiced.unvoiced.cost Voiced/unvoiced cost setting praat command pitch.ceiling Maximum pitch (Hz) speakers, female speakers, pitch.floor.male also specified. pitch.floor.male Minimum pitch (Hz) male speakers. voicing.threshold.male Voicing threshold (Hz) male speakers. pitch.ceiling.male Maximum pitch (Hz) male speakers. gender.attribute Name LaBB-CAT participant attribute contains participant's gender - normally \"participant_gender\". value..male value gender.attribute participant male. sample.points vector numbers (0 <= sample.points <= 1) specifying multiple points take measurement.  default NULL, meaning individual measurements taken (aggregate values identified get.mean, get.minimum, get.maximum).  single point 0.5 means one measurement taken halfway target interval.  , example, wanted eleven measurements evenly spaced throughout interval, specify sample.points c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0). interpolation sample.points specified, interpolation use getting individual values. Possible values 'nearest' 'linear'. skip.errors Sometimes, segments, Praat fails create Pitch object. skip.errors = TRUE, analysis segments skipped, corresponding pitch values returned \"–undefined–\". skip.errors = FALSE, error message Praat returned Error field, pitch measures returned segments recording.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptPitch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a script for extracting pitch, for use with processWithPraat — praatScriptPitch","text":"script fragment can passed praat.script parameter processWithPraat","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/praatScriptPitch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a script for extracting pitch, for use with processWithPraat — praatScriptPitch","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search results <- getMatches(labbcat.url, list(segment=\"I\"))  ## Get pitch mean, max, and min, and the midpoint of the segment, for each match pitch <- processWithPraat(               labbcat.url,               results$MatchId, results$Target.segment.start, results$Target.segment.end,               praatScriptPitch(get.mean=TRUE, get.minimum=TRUE, get.maximum=TRUE,                                sample.points = c(.5))) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/processWithPraat.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a set of intervals with Praat — processWithPraat","title":"Process a set of intervals with Praat — processWithPraat","text":"function instructs LaBB-CAT server invoke Praat set sound intervals, order extract acoustic measures.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/processWithPraat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a set of intervals with Praat — processWithPraat","text":"","code":"processWithPraat(   labbcat.url,   match.ids,   start.offsets,   end.offsets,   praat.script,   window.offset,   gender.attribute = \"participant_gender\",   attributes = NULL,   no.progress = FALSE )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/processWithPraat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a set of intervals with Praat — processWithPraat","text":"labbcat.url URL LaBB-CAT instance match.ids vector annotation IDs, e.g. MatchId column, URL column, results set. start.offsets start time seconds, vector start times. end.offsets end time seconds, vector end times. praat.script Script run match. may single string character vector. window.offset many circumstances, want context sample start/end time.  reason, can specify \"window offset\" - number seconds subtract sample start add sample end time, extracting part audio processing. example, sample starts 2.0s ends 3.0s, set window offset 0.5s, Praat extract sample audio  1.5s 3.5s, selected processing sample. best value depends praat.script ; getting formants  vowels, including context ensures formants edges accurate (LaBB-CAT's web interface, default value 0.025), getting max pitch COG segment, likely want window.offset 0 ensure neighbouring segments influence measurement. gender.attribute participant attribute represents participant's gender. attributes Vector participant attributes make available script. example, want use different acoustic parameters depending gender speaker , including \"participant_gender\" attribute make variable called participant_gender$ available praat script, whose value gender speaker segment. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/processWithPraat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a set of intervals with Praat — processWithPraat","text":"data frame acoustic measures, one row matchId.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/processWithPraat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process a set of intervals with Praat — processWithPraat","text":"exact measurements return depend praat.script invoked. Praat script fragment run sound interval specified. functions allow generation number pre-defined praat scripts common tasks formant, pitch, intensity, centre gravity – see praatScriptFormants, praatScriptCentreOfGravity, praatScriptIntensity praatScriptPitch. can provide script, either building string code, loading one file. LaBB-CAT prefixes praat.script code open sound file extract defined part Sound object selected. LaBB-CAT Remove's Sound object script finishes executing. objects created script must Remove'd end script (otherwise Praat runs memory large batches) LaBB-CAT assumes calls function 'print' correspond fields export field must printed line. Specifically scans lines form: print 'myOutputVariable' 'newline$' Variables can assumed already set context script : windowOffset – value used Window Offset; much context include. windowAbsoluteStart – start time window extracted relative start original audio file. windowAbsoluteEnd – end time window extracted relative start original audio file. windowDuration – duration window extracted (including window offset). targetAbsoluteStart – start time target interval relative start original audio file. targetAbsoluteEnd – end time target interval relative start original audio file. targetStart – start time target interval relative start window extracted. targetEnd – end time target interval relative start window extracted. targetDuration – duration target interval. sampleNumber – number sample within set samples processed. sampleName$ – name extracted/selected Sound object.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/processWithPraat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process a set of intervals with Praat — processWithPraat","text":"","code":"if (FALSE) { # \\dontrun{ ## Perform a search results <- getMatches(labbcat.url, list(segment=\"I\"))  ## get F1 and F2 for the mid point of the vowel formants <- processWithPraat(        labbcat.url,        results$MatchId, results$Target.segment.start, results$Target.segment.end,        praatScriptFormants())  ## get first 3 formants at three points during the sample, the mean, min, and max ## pitch, the max intensity, and the CoG using powers 1 and 2  acoustic.measurements <- processWithPraat(        labbcat.url,        results$MatchId, results$Target.segment.start, results$Target.segment.end,        paste(            praatScriptFormants(c(1,2,3), c(0.25,0.5,0.75)),            praatScriptPitch(get.mean=TRUE, get.minimum=TRUE, get.maximum=TRUE),            praatScriptIntensity(),            praatScriptCentreOfGravity(powers=c(1.0,2.0))),        window.offset=0.5)  ## execute a custom script loaded form a file acoustic.measurements <- processWithPraat(        labbcat.url,        results$MatchId, results$Target.segment.start, result$Target.segment.end,        readLines(\"acousticMeasurements.praat\")) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeDictionaryEntry.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes an entry from a dictionary — removeDictionaryEntry","title":"Removes an entry from a dictionary — removeDictionaryEntry","text":"function removes existing entry given dictionary.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeDictionaryEntry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes an entry from a dictionary — removeDictionaryEntry","text":"","code":"removeDictionaryEntry(   labbcat.url,   manager.id,   dictionary.id,   key,   entry = NULL )"},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeDictionaryEntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes an entry from a dictionary — removeDictionaryEntry","text":"labbcat.url URL LaBB-CAT instance manager.id layer manager ID dictionary, returned getDictionaries dictionary.id ID dictionary, returned getDictionaries key key (word) dictionary remove entry . entry value (definition) given key, NULL remove entries key.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeDictionaryEntry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes an entry from a dictionary — removeDictionaryEntry","text":"NULL entry removed, list error messages .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeDictionaryEntry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Removes an entry from a dictionary — removeDictionaryEntry","text":"must edit privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeDictionaryEntry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes an entry from a dictionary — removeDictionaryEntry","text":"","code":"if (FALSE) { # \\dontrun{ ## Remove a pronuciation of the word \"robert\" from the CELEX wordform pronunciation dictionary removeDictionaryEntry(labbcat.url, \"CELEX-EN\", \"Phonology (wordform)\", \"robert\", \"'rQ-bErt\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeLayerDictionaryEntry.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes an entry from a layer dictionary — removeLayerDictionaryEntry","title":"Removes an entry from a layer dictionary — removeLayerDictionaryEntry","text":"function removes existing entry dictionary manages given layer, updates affected tokens corpus. Words can multiple entries.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeLayerDictionaryEntry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes an entry from a layer dictionary — removeLayerDictionaryEntry","text":"","code":"removeLayerDictionaryEntry(labbcat.url, layer.id, key, entry = NULL)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeLayerDictionaryEntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes an entry from a layer dictionary — removeLayerDictionaryEntry","text":"labbcat.url URL LaBB-CAT instance layer.id ID layer dictionary configured manage . key key (word) dictionary remove entry . entry value (definition) given key, NULL remove entries given key.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeLayerDictionaryEntry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes an entry from a layer dictionary — removeLayerDictionaryEntry","text":"NULL entry added, list error messages .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeLayerDictionaryEntry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Removes an entry from a layer dictionary — removeLayerDictionaryEntry","text":"must edit privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/removeLayerDictionaryEntry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes an entry from a layer dictionary — removeLayerDictionaryEntry","text":"","code":"if (FALSE) { # \\dontrun{ ## Remove a pronunciation for \"robert\" from the phonemes layer dictionary removeLayerDictionaryEntry(labbcat.url, \"phonemes\", \"robert\", \"'rQ-bErt\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/renameParticipants.html","id":null,"dir":"Reference","previous_headings":"","what":"Renames a list of participants — renameParticipants","title":"Renames a list of participants — renameParticipants","text":"function changes IDs given set participants, possible.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/renameParticipants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renames a list of participants — renameParticipants","text":"","code":"renameParticipants(labbcat.url, current.ids, new.ids, no.progress = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/renameParticipants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renames a list of participants — renameParticipants","text":"labbcat.url URL LaBB-CAT instance current.ids vector participant IDs currently defined corpus. new.ids vector new participant IDs, element corresponding ID current.ids. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/renameParticipants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Renames a list of participants — renameParticipants","text":"vector results, element corresponding ID current.ids. ID successfully changed, corresponding element TRUE. ID changed (e.g. already existing participant using new ID), corresponding element FALSE.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/renameParticipants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renames a list of participants — renameParticipants","text":"","code":"if (FALSE) { # \\dontrun{ ## Create some new participant records old.ids <- c(\"test-id-1\",\"test-id-2\",\"test-id-3\") for (id in old.ids) saveParticipant(labbcat.url, id)  ## Batch change the IDs new.ids <- c(\"test-id-1-changed\",\"test-id-2-changed\",\"test-id-3-changed\") renameParticipants(labbcat.url, old.ids, new.ids)  ## Delete the participants we just created for (id in new.ids) deleteParticipant(labbcat.url, id) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves the details of an existing layer — saveLayer","title":"Saves the details of an existing layer — saveLayer","text":"function saves definition existing annotation layer.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves the details of an existing layer — saveLayer","text":"","code":"saveLayer(labbcat.url, layer)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves the details of an existing layer — saveLayer","text":"labbcat.url URL LaBB-CAT instance layer named list object representing layer attributes, returned getLayer newLayer, members: id layer's unique ID parentId layer's parent layer ID description description layer alignment layer's alignment - 0 none, 1 point alignment, 2 interval alignment peers Whether children peers peersOverlap Whether child peers can overlap parentIncludes Whether parent t-includes child saturated Whether children must temporally fill entire parent duration (true) (false) parentIncludes Whether parent t-includes child type type labels layer validLabels List valid label values layer","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves the details of an existing layer — saveLayer","text":"resulting layer definition, members: id layer's unique ID parentId layer's parent layer ID description description layer alignment layer's alignment - 0 none, 1 point alignment, 2 interval alignment peers Whether children peers peersOverlap Whether child peers can overlap parentIncludes Whether parent t-includes child saturated Whether children must temporally fill entire parent duration (true) (false) parentIncludes Whether parent t-includes child type type labels layer validLabels List valid label values layer","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveLayer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Saves the details of an existing layer — saveLayer","text":"must administration privileges LaBB-CAT order able use function.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveLayer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves the details of an existing layer — saveLayer","text":"","code":"if (FALSE) { # \\dontrun{ ## Get the pronunciation layer definition pronunciation <- getLayer(labbcat.url, \"pronunciation\")  ## Change some details of the definition pronunciation$description <- \"CMU Dict pronunciations encoded in DISC\" pronunciation$type <- \"ipa\"  ## Save the changes to the layer definition saveLayer(labbcat.url, pronunciation) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveMedia.html","id":null,"dir":"Reference","previous_headings":"","what":"Uploads the given media for the given transcript — saveMedia","title":"Uploads the given media for the given transcript — saveMedia","text":"function upload media file LaBB-CAT, associating given transcript.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveMedia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uploads the given media for the given transcript — saveMedia","text":"","code":"saveMedia(labbcat.url, id, media, track.suffix = NULL)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveMedia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uploads the given media for the given transcript — saveMedia","text":"labbcat.url URL LaBB-CAT instance id transcript ID. media path media upload. track.suffix track suffix media, .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveMedia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uploads the given media for the given transcript — saveMedia","text":"named list describing attributes uploaded media: trackSuffix track suffix media mimeType MIME type file url URL content file name Name file LaBB-CAT","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveMedia.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uploads the given media for the given transcript — saveMedia","text":"function work, credentials used connect server must least 'edit' access.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveMedia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uploads the given media for the given transcript — saveMedia","text":"","code":"if (FALSE) { # \\dontrun{  ## upload transcript saveMedia(     labbcat.url, \"my-transcript.eaf\", \"my-transcript/audio/room-mic.wav\", \"-room\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveParticipant.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves information about a single participant — saveParticipant","title":"Saves information about a single participant — saveParticipant","text":"function allows participant attributes ID given participant updated.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveParticipant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves information about a single participant — saveParticipant","text":"","code":"saveParticipant(labbcat.url, id, label = id, attributes = NULL)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveParticipant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves information about a single participant — saveParticipant","text":"labbcat.url URL LaBB-CAT instance id participant ID - either unique internal database ID, name. label new ID (name) participant attributes named list participant attribute values - names participant attribute layer IDs, values corresponding new attribute values. pass phrase participant access can also set specifying \"_password\" attribute.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveParticipant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves information about a single participant — saveParticipant","text":"TRUE participant's record updated, FALSE changes detected.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveParticipant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Saves information about a single participant — saveParticipant","text":"change ID existing participant, pass old/current ID id, pass new ID label. participant ID already exist database, new participant record created.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/saveParticipant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves information about a single participant — saveParticipant","text":"","code":"if (FALSE) { # \\dontrun{ ## Create a new participant record saveParticipant(labbcat.url, \"Juan Perez\", attributes=list(participant_gender=\"M\"))  ## Change the name and the gender of the participant record saveParticipant(labbcat.url, \"Juan Perez\", \"Maria Perez\", list(participant_gender=\"F\"))  ### Delete the participant we just created deleteParticipant(labbcat.url, \"Maria Perez\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUpload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a transcript file and associated media files. — transcriptUpload","title":"Upload a transcript file and associated media files. — transcriptUpload","text":"Uploading files first stage adding modifying transcript LaBB-CAT. second stage transcriptUploadParameters()","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUpload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a transcript file and associated media files. — transcriptUpload","text":"","code":"transcriptUpload(labbcat.url, transcript, media = NULL, merge = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUpload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a transcript file and associated media files. — transcriptUpload","text":"labbcat.url URL LaBB-CAT instance transcript path transcript upload. media path media upload, . merge Whether upload corresponds updates existing transcript (TRUE) new transcript (FALSE).","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUpload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a transcript file and associated media files. — transcriptUpload","text":"named list members: id unique identifier use upload subsequently calling transcriptUploadParameters() parameters list named lists representing parameters require values passed transcriptUploadParameters(). parameters returned may include information required format deserializer (e.g. mappings tiers LaBB-CAT layers) also general information required LaBB-CAT (e.g. corpus, episode, type transcript). parameter returned dict may contain following attributes: - \"name\" - name used specifying value parameter calling transcriptUploadParameters() - \"label\" - label parameter intended display user. - \"hint\" - description purpose parameter, display user. - \"type\" - type parameter, e.g. \"String\", \"Double\", \"Integer\", \"Boolean\". - \"required\" - True value must specified, False optional. - \"value\" - default value parameter. - \"possibleValues\" - list possible values, possibilities limited finite set. required parameters may include information required format deserializer  (e.g. mappings tiers LaBB-CAT layers) also general information required LaBB-CAT, : - \"labbcat_corpus\" - corpus new transcript(s) belong(s) . - \"labbcat_episode\" - episode new transcript(s) belong(s) . - \"labbcat_transcript_type\" - transcript type new transcript(s). - \"labbcat_generate\" - Whether re-regenerate automated annotation layers .","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUpload.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload a transcript file and associated media files. — transcriptUpload","text":"NB Using transcriptUpload transcriptUploadParameters alternative using newTranscript updateTranscript. function work, credentials used connect server must least 'edit' access.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUpload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a transcript file and associated media files. — transcriptUpload","text":"","code":"if (FALSE) { # \\dontrun{ ## Get attributes for new transcript corpus <- getCorpusIds(labbcat.url)[1] transcript.type.layer <- getLayer(labbcat.url, \"transcript_type\") transcript.type <- transcript.type.layer$validLabels[[1]]  ## upload transcript and its media result <- transcriptUpload(labbcat.url, \"my-transcript.eaf\", \"my-transcript.wav\", FALSE)  ## use the default parameter values parameterValues <- list() for(p in 1:length(parameters$name)) parameterValues[parameters$name[p]] <- parameters$value[p]  ## set the upload parameters to finalise the upload transcript.id <- transcriptUploadParameters(labbcat.url, result$id, parameterValues) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadDelete.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel a transcript upload started by a previous call to transcriptUpload(). — transcriptUploadDelete","title":"Cancel a transcript upload started by a previous call to transcriptUpload(). — transcriptUploadDelete","text":"cancels transcript upload started previous call transcriptUpload() deleting uploaded files server.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadDelete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel a transcript upload started by a previous call to transcriptUpload(). — transcriptUploadDelete","text":"","code":"transcriptUploadDelete(labbcat.url, id)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadDelete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel a transcript upload started by a previous call to transcriptUpload(). — transcriptUploadDelete","text":"labbcat.url URL LaBB-CAT instance id Upload ID returned prior call transcriptUpload().","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadDelete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel a transcript upload started by a previous call to transcriptUpload(). — transcriptUploadDelete","text":"","code":"if (FALSE) { # \\dontrun{ ## Get attributes for new transcript corpus <- getCorpusIds(labbcat.url)[1] transcript.type.layer <- getLayer(labbcat.url, \"transcript_type\") transcript.type <- transcript.type.layer$validLabels[[1]]  ## upload transcript and its media result <- transcriptUpload(labbcat.url, \"my-transcript.eaf\", \"my-transcript.wav\", FALSE)  ## Changed our mind, cancel this upload transcriptUploadDelete(labbcat.url, result$id) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the parameters of a transcript already uploaded with transcriptUpload. — transcriptUploadParameters","title":"Set the parameters of a transcript already uploaded with transcriptUpload. — transcriptUploadParameters","text":"second part transcript upload process started call transcriptUpload(), specifies values parameters required save uploaded transcript LaBB-CAT's database.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the parameters of a transcript already uploaded with transcriptUpload. — transcriptUploadParameters","text":"","code":"transcriptUploadParameters(labbcat.url, id, parameters, no.progress = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the parameters of a transcript already uploaded with transcriptUpload. — transcriptUploadParameters","text":"labbcat.url URL LaBB-CAT instance id Upload ID returned prior call transcriptUpload(). parameters named list name name parameter returned transcriptUpload(), value parameters value. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the parameters of a transcript already uploaded with transcriptUpload. — transcriptUploadParameters","text":"ID new transcript corpus","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the parameters of a transcript already uploaded with transcriptUpload. — transcriptUploadParameters","text":"NB Using transcriptUpload transcriptUploadParameters alternative using newTranscript updateTranscript. response includes parameters, method called supply values.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/transcriptUploadParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the parameters of a transcript already uploaded with transcriptUpload. — transcriptUploadParameters","text":"","code":"if (FALSE) { # \\dontrun{ ## Get attributes for new transcript corpus <- getCorpusIds(labbcat.url)[1] transcript.type.layer <- getLayer(labbcat.url, \"transcript_type\") transcript.type <- transcript.type.layer$validLabels[[1]]  ## upload transcript and its media result <- transcriptUpload(labbcat.url, \"my-transcript.eaf\", \"my-transcript.wav\", FALSE)  ## use the default parameter values parameterValues <- list() for(p in 1:length(parameters$name)) parameterValues[parameters$name[p]] <- parameters$value[p]  ## set the upload parameters to finalise the upload transcript.id <- transcriptUploadParameters(labbcat.url, result$id, parameterValues) } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateFragment.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a transcript fragment — updateFragment","title":"Update a transcript fragment — updateFragment","text":"function uploads file (e.g. Praat TextGrid) representing fragment transcript, annotations alignments update LaBB-CAT's version transcript.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateFragment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a transcript fragment — updateFragment","text":"","code":"updateFragment(labbcat.url, fragment.path)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateFragment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a transcript fragment — updateFragment","text":"labbcat.url URL LaBB-CAT instance fragment.path path fragment upload.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateFragment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a transcript fragment — updateFragment","text":"named list information fragment updated.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateFragment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update a transcript fragment — updateFragment","text":"function work, credentials used connect server must least 'edit' access.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateFragment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a transcript fragment — updateFragment","text":"","code":"if (FALSE) { # \\dontrun{ ## upload new verison of transcript transcript updateFragment(labbcat.url, \"my-transcript__1.234-5.678.TextGrid\") } # }"},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateTranscript.html","id":null,"dir":"Reference","previous_headings":"","what":"Update an existing transcript — updateTranscript","title":"Update an existing transcript — updateTranscript","text":"function uploads new version existing transcript.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateTranscript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update an existing transcript — updateTranscript","text":"","code":"updateTranscript(labbcat.url, transcript.path, no.progress = FALSE)"},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateTranscript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update an existing transcript — updateTranscript","text":"labbcat.url URL LaBB-CAT instance transcript.path path transcript upload. .progress TRUE suppress visual progress bar. Otherwise, progress bar shown interactive().","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateTranscript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update an existing transcript — updateTranscript","text":"ID updated transcript corpus","code":""},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateTranscript.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update an existing transcript — updateTranscript","text":"NB method uploading alternative using transcriptUpload transcriptUploadParameters. function work, credentials used connect server must least 'edit' access.","code":""},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/reference/updateTranscript.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update an existing transcript — updateTranscript","text":"","code":"if (FALSE) { # \\dontrun{ ## upload new verison of transcript transcript updateTranscript(labbcat.url, \"my-transcript.eaf\") } # }"},{"path":[]},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-1-5-0","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 1.5-0","text":"Functions added facilitate tidyverse-style piping expressions build dataframe search results annotations, acoustic measurements, etc. following functions add columns dataframe results returned getMatches: appendLabels - pipeable version getMatchLabels appendOffsets - pipeable version getMatchAnnotations appendFromPraat - pipeable version processWithPraat fragmentLabels - pipeable version getFragmentAnnotations idea can chain together data extraction functions like: following functions produce data/media files defined fragment start/end times, add columns given dataframe, rather return list file names: fragmentTranscripts - pipeable version getFragments fragmentAudio - pipeable version getSoundFragments fragmentData - pipeable version getFragmentAnnotationData example:","code":"matches <- getMatches(url, \"(dis|mis).*\") |>   appendLabels(c(\"phonemes\", \"morphology\", \"participant_gender\")) |> # layers/meta-data   appendLabels(\"orthography\", target.offset = -1) |> # previous word   appendOffsets(\"segment\", annotations.per.layer = 3) |> # first three phone alignments   appendFromPraat( # F1/F2 of the vowel (the second segment):     segment.2.start, segment.2.end,     window.offset = 0.025,     praat.script = praatScriptFormants(formants = c(1,2))) vivid.tokens <- getMatches(labbcat.url, \"vivid\") vivid.textgrids <- vivid.tokens |> fragmentTranscripts(c(\"word\", \"segment\")) vivid.wavs <- vivid.tokens |> fragmentAudio() vivid.faces <- vivid.tokens |>     fragmentData( ## png images of faces detected by mediapipe during the word         \"mediapipe\", path = \"png\",         start.column=Target.word.start, end.column=Target.word.end)"},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-1-5-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 1.5-0","text":"labbcatCredentials functions now support alternative ‘Form’ HTTP authorization may configured server, addition usual ‘Basic’ authorization.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-14-0","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 1.4-0","title":"nzilbb.labbcat 1.4-0","text":"CRAN release: 2025-05-22 Minimum LaBB-CAT version 20250430.1502","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-1-4-0","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 1.4-0","text":"saveMedia - saves given media given transcript. deleteMedia - deletes media episode document files. New, flexible upload API functions, allow finely-grained control transcript files processed LaBB-CAT: transcriptUpload - start upload process sending files server. transcriptUploadParameters - complete upload process setting upload parameters. transcriptUploadDelete - abandon previously started upload process. annotation layers, annotations textual label, also binary data associated ; e.g. image data file. cases, ‘type’ layer MIME type, e.g. ‘image/png’. following functions provide access data: getMatchingAnnotationData - Gets binary data annotations match particular pattern. getFragmentAnnotationData - Gets binary annotation data fragments.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-1-4-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 1.4-0","text":"getMatches supports matching within-word segment context allowing one pattern segment layers, anchoring segments word boundaries.","code":"## Examples of within-word segment context:  ## words that contain the /I/ phone followed by the /l/ phone ## (multiple patterns per word currently only works for segment layers) pattern <- list(segment = list(\"I\", \"l\"))  ## words that contain the /I/ phone followed by the /l/ phone, targeting the /l/ segment ## (multiple patterns per word currently only works for segment layers) pattern <- list(segment = list(\"I\", list(pattern=\"l\", target=T)))  ## words where the spelling starts with \"k\", but the first segment is /n/ pattern <- list(   orthography = \"k.*\",   segment = list(pattern = \"n\", anchorStart = T)"},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-13-0","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 1.3-0","title":"nzilbb.labbcat 1.3-0","text":"CRAN release: 2023-07-19 Minimum LaBB-CAT version 20230224.1731","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-1-3-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 1.3-0","text":"getMatches replaces participant.ids transcript.types parameters participant.expression transcript.expression parameters, line underlying API, allowing flexibility queries. getMatches parameter aligned now deprecated, please set anchor.confidence.min = 50 instead getMatches parameter anchor.confidence.min now filters results, instead just returning NA offsets minumum confidence. return results offsets, regardless confidence, set anchor.confidence.min = 0. processWithPraat’s window.offset parameter longer default value, includes thorough documentation, ensure callers aware parameter’s implications.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-1-3-0","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 1.3-0","text":"labbcatVersionInfo - gets version information components LaBB-CAT expressionFromIds : expression based list IDs expressionFromAttributeValue : expression based list possible attribute values expressionFromAttributeValues : expression based list possible attribute values, attributes can multiple values expressionFromTranscriptTypes : expression based list possible transcript types getParticipant : Gets ID participant attribute values single participant. saveParticipant : Saves participant data (supports creating renaming participants). deleteParticipant : Deletes single participant record. renameParticipants : Batch rename participants.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-12-0","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 1.2-0","title":"nzilbb.labbcat 1.2-0","text":"CRAN release: 2023-02-02 Minimum LaBB-CAT version 20230202.1600","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-1-2-0","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 1.2-0","text":"countMatchingAnnotations getMatchingAnnotations : Retrieve individual annotations match pattern expression. formatTranscript: Downloads entire transcript given format - e.g. Praat TextGrid. getMediaUrl: Returns URL given transcript. getFragmentAnnotations: Returns tokens given transcripts given layers start/end times.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-1-2-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 1.2-0","text":"getMedia now downloads media returns file name, rather returning URL. getMatches accepts string pattern, assumes ’s space-delimited orthography layer search. getMatches now anchor.confidence.min parameter, allow retrieval start/end times low confidence. getMatchLabels getMatchAlignments now return NA rather empty strings. getTranscriptIdsInCorpus, getTranscriptIdsWithParticipant, *getTranscriptIds now return character vector whether results . countAnnotations getAnnotations now max.ordinal parameter, allow retrieval first word tag annotations transcript.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-11-1","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 1.1-1","title":"nzilbb.labbcat 1.1-1","text":"CRAN release: 2022-05-19 Minimum LaBB-CAT version 20220401.1842","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-1-1-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 1.1-1","text":"sample.points - Get value time points spread duration sample interpolation - interpolation use Get value time skip.errors - handle errors Praat can’t create objects","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-11-0","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 1.1-0","title":"nzilbb.labbcat 1.1-0","text":"CRAN release: 2022-04-12 Minimum LaBB-CAT version 20220401.1842","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-1-1-0","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 1.1-0","text":"updateFragment : Upload uttereance file (e.g. TextGrid) update labels /alignments. generateLayer : Generate annotations given layer transcripts corpus. generateLayerUtterances : Generate layer given utterances. getAnnotatorDescriptor : Get information annotator. annotatorExt : Retrieve annotator extension resource. newLayer : Add new annotation layer. saveLayer : Save new definition existing annotation layer. deleteLayer : Delete existing annotation layer. uploadLexicon : Upload lexicon file Flat Lexicon Tagger. deleteLexicon : Delete previously uploaded lexicon Flat Lexicon Tagger. addLayerDictionaryEntry removeLayerDictionaryEntry addDictionaryEntry removeDictionaryEntry","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-10-1","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 1.0-1","title":"nzilbb.labbcat 1.0-1","text":"CRAN release: 2021-07-07 Minimum LaBB-CAT version 20210601.1528","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-1-0-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 1.0-1","text":"function parameters now named dot.case instead camelCase, internal external consistency. getAllUtterances getMatchAlignments getMatchLabels getSoundFragments newTranscript updateTranscript processWithPraat getMatches getMatchLabels getMatchAlignments getMatchLabels getMatchAlignments getAnchors getAnnotations getMatchingTranscriptIds getMatches getMatchLabels getMatchAlignments CSV-related bug fixes. Improve progress bar handling. Improve documentation matching expression language.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-1-0-1","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 1.0-1","text":"getMatchingParticipantIds: Gets list IDs participants match particular pattern.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-07-1","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 0.7-1","title":"nzilbb.labbcat 0.7-1","text":"CRAN release: 2021-05-27 Minimum LaBB-CAT version 20210210.2032","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-0-7-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 0.7-1","text":"remove .progress parameter (progress bar appear automatically interactive mode). getMatches now supports overlap.threshold parameter.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-0-7-1","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 0.7-1","text":"newTranscript : Upload new transcript (media) server. updateTranscript : Upload new version existing transcript server. deleteTranscript : Delete transcript (media) server. getAllUtterances : Get utterances given participants. praatScriptFastTrack : Adds support using FastTrack Praat plugin formant analysis.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-06-1","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 0.6-1","title":"nzilbb.labbcat 0.6-1","text":"CRAN release: 2020-08-26 Minimum LaBB-CAT version 20200812.1253","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-0-6-1","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 0.6-1","text":"getMatchAlignments : Gets temporal alignments matches given layer. getSerializerDescriptors : Returns list serializers, modules export annotation structures specific file format. getDeserializerDescriptors : Returns list deserializers, modules import transcriptions annotation structures specific file format. getUserInfo : Gets information current user. getSystemAttribute : Gets value given system attribute.","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-05-1","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 0.5-1","title":"nzilbb.labbcat 0.5-1","text":"CRAN release: 2020-06-13 Minimum LaBB-CAT version 20200608.1507","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-0-5-1","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 0.5-1","text":"getParticipantAttributes : Gets participant attribute values given participant IDs. getTranscriptAttributes : Gets transcript attribute values given transcript IDs. processWithPraat : Process set intervals Praat order extract acoustic measures, including functions predefined measures: praatScriptCentreOfGravity praatScriptFormants praatScriptIntensity praatScriptPitch","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-0-5-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 0.5-1","text":"retrieval multiple layers labels next/previous token","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-04-1","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 0.4-1","title":"nzilbb.labbcat 0.4-1","text":"CRAN release: 2020-01-09 Minimum LaBB-CAT version 20200108.1025","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-0-4-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 0.4-1","text":"Added getMatches function searching LaBB-CAT Improved handling large lists passed getAnchors Increased default timeout period","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"nzilbblabbcat-03-1","dir":"Changelog","previous_headings":"","what":"nzilbb.labbcat 0.3-1","title":"nzilbb.labbcat 0.3-1","text":"CRAN release: 2019-10-28 Minimum LaBB-CAT version 20191022.1827","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"new-functions-0-3-1","dir":"Changelog","previous_headings":"","what":"New functions:","title":"nzilbb.labbcat 0.3-1","text":"getFragments : exporting fragments Praat TextGrids. labbcatTimeout : specifying request timeout (slow internet)","code":""},{"path":"https://nzilbb.github.io/labbcat-R/news/index.html","id":"enhancements-0-3-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nzilbb.labbcat 0.3-1","text":"path parameter getSoundFragments function","code":""}]
